; ModuleID = 'blocksort.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.EState = type { %struct.bz_stream*, i32, i32, i32, i32*, i32*, i32*, i32, i32*, i8*, i16*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i8], [256 x i8], i32, i32, i32, i32, i32, i32, i32, i32, [258 x i32], [18002 x i8], [18002 x i8], [6 x [258 x i8]], [6 x [258 x i32]], [6 x [258 x i32]], [258 x [4 x i32]] }
%struct.bz_stream = type { i8*, i32, i32, i32, i8*, i32, i32, i32, i8*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8* }

@stderr = external global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [38 x i8] c"      %d work, %d block, ratio %5.2f\0A\00", align 1
@.str.1 = private unnamed_addr constant [54 x i8] c"    too repetitive; using fallback sorting algorithm\0A\00", align 1
@.str.2 = private unnamed_addr constant [28 x i8] c"        bucket sorting ...\0A\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"        depth %6d has \00", align 1
@.str.4 = private unnamed_addr constant [24 x i8] c"%6d unresolved strings\0A\00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"        reconstructing block ...\0A\00", align 1
@.str.6 = private unnamed_addr constant [34 x i8] c"        main sort initialise ...\0A\00", align 1
@.str.7 = private unnamed_addr constant [48 x i8] c"        qsort [0x%x, 0x%x]   done %d   this %d\0A\00", align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"        %d pointers, %d sorted, %d scanned\0A\00", align 1
@incs = internal unnamed_addr constant [14 x i32] [i32 1, i32 4, i32 13, i32 40, i32 121, i32 364, i32 1093, i32 3280, i32 9841, i32 29524, i32 88573, i32 265720, i32 797161, i32 2391484], align 16

; Function Attrs: nounwind uwtable
define void @BZ2_blockSort(%struct.EState* nocapture %s) #0 {
entry:
  %stackLo.i.i = alloca [100 x i32], align 16
  %stackHi.i.i = alloca [100 x i32], align 16
  %stackD.i.i = alloca [100 x i32], align 16
  %runningOrder.i = alloca [256 x i32], align 16
  %bigDone.i = alloca [256 x i8], align 16
  %copyStart.i = alloca [256 x i32], align 16
  %copyEnd.i = alloca [256 x i32], align 16
  %budget = alloca i32, align 4
  %ptr1 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 8
  %0 = load i32*, i32** %ptr1, align 8
  %block2 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 9
  %1 = load i8*, i8** %block2, align 8
  %ftab3 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 6
  %2 = load i32*, i32** %ftab3, align 8
  %nblock4 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 17
  %3 = load i32, i32* %nblock4, align 4
  %verbosity = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 28
  %4 = load i32, i32* %verbosity, align 8
  %workFactor = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 12
  %5 = load i32, i32* %workFactor, align 8
  %6 = bitcast i32* %budget to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #5
  %cmp = icmp slt i32 %3, 10000
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %arr1 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 4
  %7 = load i32*, i32** %arr1, align 8
  %arr2 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 5
  %8 = load i32*, i32** %arr2, align 8
  tail call fastcc void @fallbackSort(i32* %7, i32* %8, i32* %2, i32 %3, i32 %4)
  br label %if.end33

if.else:                                          ; preds = %entry
  %add = add nsw i32 %3, 34
  %and = and i32 %add, 1
  %tobool = icmp eq i32 %and, 0
  %inc = add nsw i32 %3, 35
  %add.inc = select i1 %tobool, i32 %add, i32 %inc
  %idxprom = sext i32 %add.inc to i64
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom
  %9 = bitcast i8* %arrayidx to i16*
  %cmp6 = icmp slt i32 %5, 1
  %wfact.0 = select i1 %cmp6, i32 1, i32 %5
  %cmp9 = icmp sgt i32 %wfact.0, 100
  %.wfact.0 = select i1 %cmp9, i32 100, i32 %wfact.0
  %sub = add nsw i32 %.wfact.0, -1
  %div = sdiv i32 %sub, 3
  %mul = mul nsw i32 %div, %3
  store i32 %mul, i32* %budget, align 4
  %ftab948.i = bitcast i32* %2 to i8*
  %bigDone945.i = getelementptr inbounds [256 x i8], [256 x i8]* %bigDone.i, i64 0, i64 0
  %10 = bitcast [256 x i32]* %runningOrder.i to i8*
  call void @llvm.lifetime.start(i64 1024, i8* %10) #5
  call void @llvm.lifetime.start(i64 256, i8* %bigDone945.i) #5
  %11 = bitcast [256 x i32]* %copyStart.i to i8*
  call void @llvm.lifetime.start(i64 1024, i8* %11) #5
  %12 = bitcast [256 x i32]* %copyEnd.i to i8*
  call void @llvm.lifetime.start(i64 1024, i8* %12) #5
  %cmp.i = icmp sgt i32 %4, 3
  br i1 %cmp.i, label %if.then.i, label %for.body.preheader.i

if.then.i:                                        ; preds = %if.else
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %14 = tail call i64 @fwrite(i8* nonnull getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0), i64 33, i64 1, %struct._IO_FILE* %13) #6
  br label %for.body.preheader.i

for.body.preheader.i:                             ; preds = %if.then.i, %if.else
  tail call void @llvm.memset.p0i8.i64(i8* %ftab948.i, i8 0, i64 262148, i32 4, i1 false) #5
  %15 = load i8, i8* %1, align 1
  %conv.i = zext i8 %15 to i32
  %shl.i = shl nuw nsw i32 %conv.i, 8
  %sub.i = add i32 %3, -1
  %cmp4866.i = icmp sgt i32 %sub.i, 2
  br i1 %cmp4866.i, label %for.body6.preheader.i, label %for.cond61.preheader.i

for.body6.preheader.i:                            ; preds = %for.body.preheader.i
  %16 = add i32 %3, -4
  %17 = sext i32 %sub.i to i64
  br label %for.body6.i

for.cond61.preheader.loopexit.i:                  ; preds = %for.body6.i
  %18 = and i32 %16, -4
  %19 = add i32 %3, -5
  %20 = sub i32 %19, %18
  br label %for.cond61.preheader.i

for.cond61.preheader.i:                           ; preds = %for.cond61.preheader.loopexit.i, %for.body.preheader.i
  %i.1.lcssa.i = phi i32 [ %sub.i, %for.body.preheader.i ], [ %20, %for.cond61.preheader.loopexit.i ]
  %j.0.lcssa.i = phi i32 [ %shl.i, %for.body.preheader.i ], [ %or54.i, %for.cond61.preheader.loopexit.i ]
  %cmp62863.i = icmp sgt i32 %i.1.lcssa.i, -1
  br i1 %cmp62863.i, label %for.body64.preheader.i, label %for.body83.preheader.i

for.body64.preheader.i:                           ; preds = %for.cond61.preheader.i
  %21 = sext i32 %i.1.lcssa.i to i64
  br label %for.body64.i

for.body6.i:                                      ; preds = %for.body6.i, %for.body6.preheader.i
  %indvars.iv169 = phi i64 [ %indvars.iv.next170, %for.body6.i ], [ %17, %for.body6.preheader.i ]
  %i.1868.i = phi i32 [ %sub59.i, %for.body6.i ], [ %sub.i, %for.body6.preheader.i ]
  %j.0867.i = phi i32 [ %or54.i, %for.body6.i ], [ %shl.i, %for.body6.preheader.i ]
  %arrayidx8.i = getelementptr inbounds i16, i16* %9, i64 %indvars.iv169
  store i16 0, i16* %arrayidx8.i, align 2
  %shr.i = ashr i32 %j.0867.i, 8
  %arrayidx10.i = getelementptr inbounds i8, i8* %1, i64 %indvars.iv169
  %22 = load i8, i8* %arrayidx10.i, align 1
  %conv12.i = zext i8 %22 to i32
  %shl13.i = shl nuw nsw i32 %conv12.i, 8
  %or.i = or i32 %shl13.i, %shr.i
  %idxprom14.i = sext i32 %or.i to i64
  %arrayidx15.i = getelementptr inbounds i32, i32* %2, i64 %idxprom14.i
  %23 = load i32, i32* %arrayidx15.i, align 4
  %inc.i = add i32 %23, 1
  store i32 %inc.i, i32* %arrayidx15.i, align 4
  %sub16.i = add nsw i32 %i.1868.i, -1
  %idxprom17.i = sext i32 %sub16.i to i64
  %arrayidx18.i = getelementptr inbounds i16, i16* %9, i64 %idxprom17.i
  store i16 0, i16* %arrayidx18.i, align 2
  %shr19.i = ashr i32 %or.i, 8
  %arrayidx22.i = getelementptr inbounds i8, i8* %1, i64 %idxprom17.i
  %24 = load i8, i8* %arrayidx22.i, align 1
  %conv24.i = zext i8 %24 to i32
  %shl25.i = shl nuw nsw i32 %conv24.i, 8
  %or26.i = or i32 %shl25.i, %shr19.i
  %idxprom27.i = sext i32 %or26.i to i64
  %arrayidx28.i = getelementptr inbounds i32, i32* %2, i64 %idxprom27.i
  %25 = load i32, i32* %arrayidx28.i, align 4
  %inc29.i = add i32 %25, 1
  store i32 %inc29.i, i32* %arrayidx28.i, align 4
  %sub30.i = add nsw i32 %i.1868.i, -2
  %idxprom31.i = sext i32 %sub30.i to i64
  %arrayidx32.i = getelementptr inbounds i16, i16* %9, i64 %idxprom31.i
  store i16 0, i16* %arrayidx32.i, align 2
  %shr33.i = ashr i32 %or26.i, 8
  %arrayidx36.i = getelementptr inbounds i8, i8* %1, i64 %idxprom31.i
  %26 = load i8, i8* %arrayidx36.i, align 1
  %conv38.i = zext i8 %26 to i32
  %shl39.i = shl nuw nsw i32 %conv38.i, 8
  %or40.i = or i32 %shl39.i, %shr33.i
  %idxprom41.i = sext i32 %or40.i to i64
  %arrayidx42.i = getelementptr inbounds i32, i32* %2, i64 %idxprom41.i
  %27 = load i32, i32* %arrayidx42.i, align 4
  %inc43.i = add i32 %27, 1
  store i32 %inc43.i, i32* %arrayidx42.i, align 4
  %sub44.i = add nsw i32 %i.1868.i, -3
  %idxprom45.i = sext i32 %sub44.i to i64
  %arrayidx46.i = getelementptr inbounds i16, i16* %9, i64 %idxprom45.i
  store i16 0, i16* %arrayidx46.i, align 2
  %shr47.i = ashr i32 %or40.i, 8
  %arrayidx50.i = getelementptr inbounds i8, i8* %1, i64 %idxprom45.i
  %28 = load i8, i8* %arrayidx50.i, align 1
  %conv52.i = zext i8 %28 to i32
  %shl53.i = shl nuw nsw i32 %conv52.i, 8
  %or54.i = or i32 %shl53.i, %shr47.i
  %idxprom55.i = sext i32 %or54.i to i64
  %arrayidx56.i = getelementptr inbounds i32, i32* %2, i64 %idxprom55.i
  %29 = load i32, i32* %arrayidx56.i, align 4
  %inc57.i = add i32 %29, 1
  store i32 %inc57.i, i32* %arrayidx56.i, align 4
  %sub59.i = add nsw i32 %i.1868.i, -4
  %cmp4.i = icmp sgt i32 %sub59.i, 2
  %indvars.iv.next170 = add nsw i64 %indvars.iv169, -4
  br i1 %cmp4.i, label %for.body6.i, label %for.cond61.preheader.loopexit.i

for.body64.i:                                     ; preds = %for.body64.i, %for.body64.preheader.i
  %indvars.iv935.i = phi i64 [ %21, %for.body64.preheader.i ], [ %indvars.iv.next936.i, %for.body64.i ]
  %j.1864.i = phi i32 [ %j.0.lcssa.i, %for.body64.preheader.i ], [ %or73.i, %for.body64.i ]
  %arrayidx66.i = getelementptr inbounds i16, i16* %9, i64 %indvars.iv935.i
  store i16 0, i16* %arrayidx66.i, align 2
  %shr67.i = ashr i32 %j.1864.i, 8
  %arrayidx69.i = getelementptr inbounds i8, i8* %1, i64 %indvars.iv935.i
  %30 = load i8, i8* %arrayidx69.i, align 1
  %conv71.i = zext i8 %30 to i32
  %shl72.i = shl nuw nsw i32 %conv71.i, 8
  %or73.i = or i32 %shl72.i, %shr67.i
  %idxprom74.i = sext i32 %or73.i to i64
  %arrayidx75.i = getelementptr inbounds i32, i32* %2, i64 %idxprom74.i
  %31 = load i32, i32* %arrayidx75.i, align 4
  %inc76.i = add i32 %31, 1
  store i32 %inc76.i, i32* %arrayidx75.i, align 4
  %indvars.iv.next936.i = add nsw i64 %indvars.iv935.i, -1
  %cmp62.i = icmp sgt i64 %indvars.iv935.i, 0
  br i1 %cmp62.i, label %for.body64.i, label %for.body83.preheader.i

for.body83.preheader.i:                           ; preds = %for.body64.i, %for.cond61.preheader.i
  %32 = sext i32 %3 to i64
  %33 = sext i32 %3 to i64
  %scevgep = getelementptr i8, i8* %1, i64 %33
  %34 = add nsw i64 %33, 33
  %scevgep245 = getelementptr i8, i8* %1, i64 %34
  %35 = shl nsw i64 %33, 1
  %36 = sext i32 %add.inc to i64
  %37 = add nsw i64 %35, %36
  %scevgep246 = getelementptr i8, i8* %1, i64 %37
  %38 = add nsw i64 %37, 66
  %scevgep247 = getelementptr i8, i8* %1, i64 %38
  %scevgep248 = getelementptr i8, i8* %1, i64 33
  %bound0 = icmp ule i8* %scevgep, %scevgep247
  %bound1 = icmp ule i8* %scevgep246, %scevgep245
  %found.conflict = and i1 %bound0, %bound1
  %bound0249 = icmp ule i8* %scevgep, %scevgep248
  %bound1250 = icmp ule i8* %1, %scevgep245
  %found.conflict251 = and i1 %bound0249, %bound1250
  %conflict.rdx = or i1 %found.conflict, %found.conflict251
  %bound0252 = icmp ule i8* %scevgep246, %scevgep248
  %bound1253 = icmp ule i8* %1, %scevgep247
  %found.conflict254 = and i1 %bound0252, %bound1253
  %conflict.rdx255 = or i1 %conflict.rdx, %found.conflict254
  br i1 %conflict.rdx255, label %for.body83.i, label %vector.body

vector.body:                                      ; preds = %for.body83.preheader.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body83.preheader.i ]
  %39 = getelementptr inbounds i8, i8* %1, i64 %index
  %40 = bitcast i8* %39 to i64*
  %wide.load372 = load i64, i64* %40, align 1
  %41 = add i64 %index, %32
  %42 = getelementptr inbounds i8, i8* %1, i64 %41
  %43 = bitcast i8* %42 to i64*
  store i64 %wide.load372, i64* %43, align 1
  %44 = getelementptr inbounds i16, i16* %9, i64 %41
  %45 = bitcast i16* %44 to <8 x i16>*
  store <8 x i16> zeroinitializer, <8 x i16>* %45, align 2
  %index.next = add i64 %index, 8
  %46 = icmp eq i64 %index.next, 32
  br i1 %46, label %for.body83.i, label %vector.body, !llvm.loop !1

for.body83.i:                                     ; preds = %for.body83.preheader.i, %vector.body, %for.body83.i
  %indvars.iv931.i = phi i64 [ %indvars.iv.next932.i, %for.body83.i ], [ 0, %for.body83.preheader.i ], [ 32, %vector.body ]
  %arrayidx85.i = getelementptr inbounds i8, i8* %1, i64 %indvars.iv931.i
  %47 = load i8, i8* %arrayidx85.i, align 1
  %48 = add nsw i64 %indvars.iv931.i, %32
  %arrayidx87.i = getelementptr inbounds i8, i8* %1, i64 %48
  store i8 %47, i8* %arrayidx87.i, align 1
  %arrayidx90.i = getelementptr inbounds i16, i16* %9, i64 %48
  store i16 0, i16* %arrayidx90.i, align 2
  %indvars.iv.next932.i = add nuw nsw i64 %indvars.iv931.i, 1
  %exitcond934.i = icmp eq i64 %indvars.iv.next932.i, 34
  br i1 %exitcond934.i, label %for.end93.i, label %for.body83.i, !llvm.loop !4

for.end93.i:                                      ; preds = %for.body83.i
  br i1 %cmp.i, label %if.then96.i, label %for.body102.preheader.i

if.then96.i:                                      ; preds = %for.end93.i
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %50 = tail call i64 @fwrite(i8* nonnull getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i64 0, i64 0), i64 27, i64 1, %struct._IO_FILE* %49) #6
  br label %for.body102.preheader.i

for.body102.preheader.i:                          ; preds = %if.then96.i, %for.end93.i
  %.pre.i = load i32, i32* %2, align 4
  br label %for.body102.i

for.body102.i:                                    ; preds = %for.body102.i, %for.body102.preheader.i
  %51 = phi i32 [ %.pre.i, %for.body102.preheader.i ], [ %add108.i, %for.body102.i ]
  %indvars.iv927.i = phi i64 [ 1, %for.body102.preheader.i ], [ %indvars.iv.next928.i, %for.body102.i ]
  %arrayidx107.i = getelementptr inbounds i32, i32* %2, i64 %indvars.iv927.i
  %52 = load i32, i32* %arrayidx107.i, align 4
  %add108.i = add i32 %52, %51
  store i32 %add108.i, i32* %arrayidx107.i, align 4
  %indvars.iv.next928.i = add nuw nsw i64 %indvars.iv927.i, 1
  %exitcond930.i = icmp eq i64 %indvars.iv.next928.i, 65537
  br i1 %exitcond930.i, label %for.end111.i, label %for.body102.i

for.end111.i:                                     ; preds = %for.body102.i
  %53 = load i8, i8* %1, align 1
  %conv113.i = zext i8 %53 to i16
  %shl114.i = shl nuw i16 %conv113.i, 8
  br i1 %cmp4866.i, label %for.body120.preheader.i, label %for.cond190.preheader.i

for.body120.preheader.i:                          ; preds = %for.end111.i
  %54 = add i32 %3, -4
  %55 = sext i32 %sub.i to i64
  br label %for.body120.i

for.cond190.preheader.loopexit.i:                 ; preds = %for.body120.i
  %56 = and i32 %54, -4
  %57 = add i32 %3, -5
  %58 = sub i32 %57, %56
  br label %for.cond190.preheader.i

for.cond190.preheader.i:                          ; preds = %for.cond190.preheader.loopexit.i, %for.end111.i
  %i.5.lcssa.i = phi i32 [ %sub.i, %for.end111.i ], [ %58, %for.cond190.preheader.loopexit.i ]
  %s.0.lcssa.i = phi i16 [ %shl114.i, %for.end111.i ], [ %or177.i, %for.cond190.preheader.loopexit.i ]
  %cmp191853.i = icmp sgt i32 %i.5.lcssa.i, -1
  br i1 %cmp191853.i, label %for.body193.preheader.i, label %for.body215.preheader.i

for.body193.preheader.i:                          ; preds = %for.cond190.preheader.i
  %59 = sext i32 %i.5.lcssa.i to i64
  br label %for.body193.i

for.body120.i:                                    ; preds = %for.body120.i, %for.body120.preheader.i
  %indvars.iv167 = phi i64 [ %indvars.iv.next168, %for.body120.i ], [ %55, %for.body120.preheader.i ]
  %i.5858.i = phi i32 [ %sub188.i, %for.body120.i ], [ %sub.i, %for.body120.preheader.i ]
  %s.0857.i = phi i16 [ %or177.i, %for.body120.i ], [ %shl114.i, %for.body120.preheader.i ]
  %shr122802.i = lshr i16 %s.0857.i, 8
  %arrayidx124.i = getelementptr inbounds i8, i8* %1, i64 %indvars.iv167
  %60 = load i8, i8* %arrayidx124.i, align 1
  %conv125.i = zext i8 %60 to i16
  %shl126.i = shl nuw i16 %conv125.i, 8
  %or127.i = or i16 %shl126.i, %shr122802.i
  %idxprom129.i = zext i16 %or127.i to i64
  %arrayidx130.i = getelementptr inbounds i32, i32* %2, i64 %idxprom129.i
  %61 = load i32, i32* %arrayidx130.i, align 4
  %sub131.i = add i32 %61, -1
  store i32 %sub131.i, i32* %arrayidx130.i, align 4
  %idxprom134.i = sext i32 %sub131.i to i64
  %arrayidx135.i = getelementptr inbounds i32, i32* %0, i64 %idxprom134.i
  %62 = trunc i64 %indvars.iv167 to i32
  store i32 %62, i32* %arrayidx135.i, align 4
  %sub138.i = add nsw i32 %i.5858.i, -1
  %idxprom139.i = sext i32 %sub138.i to i64
  %arrayidx140.i = getelementptr inbounds i8, i8* %1, i64 %idxprom139.i
  %63 = load i8, i8* %arrayidx140.i, align 1
  %conv141.i = zext i8 %63 to i16
  %shl142.i = shl nuw i16 %conv141.i, 8
  %or143.i = or i16 %shl142.i, %conv125.i
  %idxprom145.i = zext i16 %or143.i to i64
  %arrayidx146.i = getelementptr inbounds i32, i32* %2, i64 %idxprom145.i
  %64 = load i32, i32* %arrayidx146.i, align 4
  %sub147.i = add i32 %64, -1
  store i32 %sub147.i, i32* %arrayidx146.i, align 4
  %idxprom151.i = sext i32 %sub147.i to i64
  %arrayidx152.i = getelementptr inbounds i32, i32* %0, i64 %idxprom151.i
  store i32 %sub138.i, i32* %arrayidx152.i, align 4
  %sub155.i = add nsw i32 %i.5858.i, -2
  %idxprom156.i = sext i32 %sub155.i to i64
  %arrayidx157.i = getelementptr inbounds i8, i8* %1, i64 %idxprom156.i
  %65 = load i8, i8* %arrayidx157.i, align 1
  %conv158.i = zext i8 %65 to i16
  %shl159.i = shl nuw i16 %conv158.i, 8
  %or160.i = or i16 %shl159.i, %conv141.i
  %idxprom162.i = zext i16 %or160.i to i64
  %arrayidx163.i = getelementptr inbounds i32, i32* %2, i64 %idxprom162.i
  %66 = load i32, i32* %arrayidx163.i, align 4
  %sub164.i = add i32 %66, -1
  store i32 %sub164.i, i32* %arrayidx163.i, align 4
  %idxprom168.i = sext i32 %sub164.i to i64
  %arrayidx169.i = getelementptr inbounds i32, i32* %0, i64 %idxprom168.i
  store i32 %sub155.i, i32* %arrayidx169.i, align 4
  %sub172.i = add nsw i32 %i.5858.i, -3
  %idxprom173.i = sext i32 %sub172.i to i64
  %arrayidx174.i = getelementptr inbounds i8, i8* %1, i64 %idxprom173.i
  %67 = load i8, i8* %arrayidx174.i, align 1
  %conv175.i = zext i8 %67 to i16
  %shl176.i = shl nuw i16 %conv175.i, 8
  %or177.i = or i16 %shl176.i, %conv158.i
  %idxprom179.i = zext i16 %or177.i to i64
  %arrayidx180.i = getelementptr inbounds i32, i32* %2, i64 %idxprom179.i
  %68 = load i32, i32* %arrayidx180.i, align 4
  %sub181.i = add i32 %68, -1
  store i32 %sub181.i, i32* %arrayidx180.i, align 4
  %idxprom185.i = sext i32 %sub181.i to i64
  %arrayidx186.i = getelementptr inbounds i32, i32* %0, i64 %idxprom185.i
  store i32 %sub172.i, i32* %arrayidx186.i, align 4
  %sub188.i = add nsw i32 %i.5858.i, -4
  %cmp118.i = icmp sgt i32 %sub188.i, 2
  %indvars.iv.next168 = add nsw i64 %indvars.iv167, -4
  br i1 %cmp118.i, label %for.body120.i, label %for.cond190.preheader.loopexit.i

for.body193.i:                                    ; preds = %for.body193.i, %for.body193.preheader.i
  %indvars.iv923.i = phi i64 [ %59, %for.body193.preheader.i ], [ %indvars.iv.next924.i, %for.body193.i ]
  %s.1854.i = phi i16 [ %s.0.lcssa.i, %for.body193.preheader.i ], [ %or200.i, %for.body193.i ]
  %shr195801.i = lshr i16 %s.1854.i, 8
  %arrayidx197.i = getelementptr inbounds i8, i8* %1, i64 %indvars.iv923.i
  %69 = load i8, i8* %arrayidx197.i, align 1
  %conv198.i = zext i8 %69 to i16
  %shl199.i = shl nuw i16 %conv198.i, 8
  %or200.i = or i16 %shl199.i, %shr195801.i
  %idxprom202.i = zext i16 %or200.i to i64
  %arrayidx203.i = getelementptr inbounds i32, i32* %2, i64 %idxprom202.i
  %70 = load i32, i32* %arrayidx203.i, align 4
  %sub204.i = add i32 %70, -1
  store i32 %sub204.i, i32* %arrayidx203.i, align 4
  %idxprom207.i = sext i32 %sub204.i to i64
  %arrayidx208.i = getelementptr inbounds i32, i32* %0, i64 %idxprom207.i
  %71 = trunc i64 %indvars.iv923.i to i32
  store i32 %71, i32* %arrayidx208.i, align 4
  %indvars.iv.next924.i = add nsw i64 %indvars.iv923.i, -1
  %cmp191.i = icmp sgt i64 %indvars.iv923.i, 0
  br i1 %cmp191.i, label %for.body193.i, label %for.body215.preheader.i

for.body215.preheader.i:                          ; preds = %for.body193.i, %for.cond190.preheader.i
  call void @llvm.memset.p0i8.i64(i8* %bigDone945.i, i8 0, i64 256, i32 16, i1 false) #5
  br label %vector.body258

vector.body258:                                   ; preds = %vector.body258, %for.body215.preheader.i
  %index263 = phi i64 [ 0, %for.body215.preheader.i ], [ %index.next264, %vector.body258 ]
  %72 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 %index263
  %73 = trunc i64 %index263 to i32
  %broadcast.splatinsert270 = insertelement <4 x i32> undef, i32 %73, i32 0
  %broadcast.splat271 = shufflevector <4 x i32> %broadcast.splatinsert270, <4 x i32> undef, <4 x i32> zeroinitializer
  %induction272 = add <4 x i32> %broadcast.splat271, <i32 0, i32 1, i32 2, i32 3>
  %74 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> %induction272, <4 x i32>* %74, align 16
  %index.next264 = add i64 %index263, 4
  %75 = icmp eq i64 %index.next264, 256
  br i1 %75, label %do.body226.i, label %vector.body258, !llvm.loop !5

do.body226.i:                                     ; preds = %vector.body258, %do.cond273.i
  %h.1.i = phi i32 [ %div.i, %do.cond273.i ], [ 364, %vector.body258 ]
  %div.i = sdiv i32 %h.1.i, 3
  %cmp228850.i = icmp slt i32 %h.1.i, 768
  br i1 %cmp228850.i, label %for.body230.preheader.i, label %do.cond273.i

for.body230.preheader.i:                          ; preds = %do.body226.i
  %76 = sext i32 %div.i to i64
  br label %for.body230.i

for.body230.i:                                    ; preds = %zero.i, %for.body230.preheader.i
  %indvars.iv918.i = phi i64 [ %76, %for.body230.preheader.i ], [ %indvars.iv.next919.i, %zero.i ]
  %arrayidx232.i = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 %indvars.iv918.i
  %77 = load i32, i32* %arrayidx232.i, align 4
  %add247.i = shl i32 %77, 8
  %shl248.i = add i32 %add247.i, 256
  %idxprom249.i = sext i32 %shl248.i to i64
  %arrayidx250.i = getelementptr inbounds i32, i32* %2, i64 %idxprom249.i
  %78 = load i32, i32* %arrayidx250.i, align 4
  %idxprom252.i = sext i32 %add247.i to i64
  %arrayidx253.i = getelementptr inbounds i32, i32* %2, i64 %idxprom252.i
  %79 = load i32, i32* %arrayidx253.i, align 4
  %sub254.i = sub i32 %78, %79
  %80 = trunc i64 %indvars.iv918.i to i32
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.body.i, %for.body230.i
  %j.2.i = phi i32 [ %80, %for.body230.i ], [ %sub233.i, %while.body.i ]
  %sub233.i = sub nsw i32 %j.2.i, %div.i
  %idxprom234.i = sext i32 %sub233.i to i64
  %arrayidx235.i = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 %idxprom234.i
  %81 = load i32, i32* %arrayidx235.i, align 4
  %add236.i = shl i32 %81, 8
  %shl237.i = add i32 %add236.i, 256
  %idxprom238.i = sext i32 %shl237.i to i64
  %arrayidx239.i = getelementptr inbounds i32, i32* %2, i64 %idxprom238.i
  %82 = load i32, i32* %arrayidx239.i, align 4
  %idxprom244.i = sext i32 %add236.i to i64
  %arrayidx245.i = getelementptr inbounds i32, i32* %2, i64 %idxprom244.i
  %83 = load i32, i32* %arrayidx245.i, align 4
  %sub246.i = sub i32 %82, %83
  %cmp255.i = icmp ugt i32 %sub246.i, %sub254.i
  br i1 %cmp255.i, label %while.body.i, label %zero.i

while.body.i:                                     ; preds = %while.cond.i
  %idxprom260.i = sext i32 %j.2.i to i64
  %arrayidx261.i = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 %idxprom260.i
  store i32 %81, i32* %arrayidx261.i, align 4
  %cmp264.i = icmp slt i32 %sub233.i, %div.i
  br i1 %cmp264.i, label %zero.i, label %while.cond.i

zero.i:                                           ; preds = %while.body.i, %while.cond.i
  %j.3.i = phi i32 [ %sub233.i, %while.body.i ], [ %j.2.i, %while.cond.i ]
  %idxprom268.i = sext i32 %j.3.i to i64
  %arrayidx269.i = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 %idxprom268.i
  store i32 %77, i32* %arrayidx269.i, align 4
  %indvars.iv.next919.i = add nsw i64 %indvars.iv918.i, 1
  %cmp228.i = icmp slt i64 %indvars.iv.next919.i, 256
  br i1 %cmp228.i, label %for.body230.i, label %do.cond273.i

do.cond273.i:                                     ; preds = %zero.i, %do.body226.i
  %h.1.off.i = add nsw i32 %h.1.i, -3
  %84 = icmp ugt i32 %h.1.off.i, 2
  br i1 %84, label %do.body226.i, label %for.cond277.preheader.i

for.cond277.preheader.i:                          ; preds = %do.cond273.i
  %85 = bitcast [100 x i32]* %stackLo.i.i to i8*
  %86 = bitcast [100 x i32]* %stackHi.i.i to i8*
  %87 = bitcast [100 x i32]* %stackD.i.i to i8*
  %arrayidx.i.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo.i.i, i64 0, i64 0
  %arrayidx2.i.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi.i.i, i64 0, i64 0
  %arrayidx4.i.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackD.i.i, i64 0, i64 0
  br label %for.body280.i

for.body280.i:                                    ; preds = %for.inc507.i, %for.cond277.preheader.i
  %.pr.i.i177 = phi i32 [ %mul, %for.cond277.preheader.i ], [ %.pr.i.i179, %for.inc507.i ]
  %indvars.iv916.i = phi i64 [ 0, %for.cond277.preheader.i ], [ %indvars.iv.next917.i, %for.inc507.i ]
  %numQSorted.0848.i = phi i32 [ 0, %for.cond277.preheader.i ], [ %numQSorted.5.i, %for.inc507.i ]
  %arrayidx282.i = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 %indvars.iv916.i
  %88 = load i32, i32* %arrayidx282.i, align 4
  %shl290.i = shl i32 %88, 8
  %89 = sext i32 %shl290.i to i64
  %90 = zext i32 %88 to i64
  br label %for.body286.i

for.body286.i:                                    ; preds = %for.inc327.i, %for.body280.i
  %.pr.i.i178 = phi i32 [ %.pr.i.i177, %for.body280.i ], [ %.pr.i.i179, %for.inc327.i ]
  %indvars.iv.i = phi i64 [ 0, %for.body280.i ], [ %indvars.iv.next.i, %for.inc327.i ]
  %numQSorted.1836.i = phi i32 [ %numQSorted.0848.i, %for.body280.i ], [ %numQSorted.5.i, %for.inc327.i ]
  %cmp287.i = icmp eq i64 %indvars.iv.i, %90
  br i1 %cmp287.i, label %for.inc327.i, label %if.then289.i

if.then289.i:                                     ; preds = %for.body286.i
  %91 = add nuw nsw i64 %indvars.iv.i, %89
  %arrayidx293.i = getelementptr inbounds i32, i32* %2, i64 %91
  %92 = load i32, i32* %arrayidx293.i, align 4
  %and.i = and i32 %92, 2097152
  %tobool.i = icmp eq i32 %and.i, 0
  br i1 %tobool.i, label %if.then294.i, label %if.end322.i

if.then294.i:                                     ; preds = %if.then289.i
  %and297.i = and i32 %92, -2097153
  %93 = add nsw i64 %91, 1
  %arrayidx300.i = getelementptr inbounds i32, i32* %2, i64 %93
  %94 = load i32, i32* %arrayidx300.i, align 4
  %and301.i = and i32 %94, -2097153
  %sub302.i = add i32 %and301.i, -1
  %cmp303.i = icmp sgt i32 %sub302.i, %and297.i
  br i1 %cmp303.i, label %if.then305.i, label %if.end322.i

if.then305.i:                                     ; preds = %if.then294.i
  br i1 %cmp.i, label %if.then308.i, label %if.end312.i

if.then308.i:                                     ; preds = %if.then305.i
  %95 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %sub309.i = sub i32 1, %and297.i
  %add310.i = add i32 %sub309.i, %sub302.i
  %96 = trunc i64 %indvars.iv.i to i32
  %call311.i = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %95, i8* nonnull getelementptr inbounds ([48 x i8], [48 x i8]* @.str.7, i64 0, i64 0), i32 %88, i32 %96, i32 %numQSorted.1836.i, i32 %add310.i) #6
  br label %if.end312.i

if.end312.i:                                      ; preds = %if.then308.i, %if.then305.i
  call void @llvm.lifetime.start(i64 400, i8* %85) #5
  call void @llvm.lifetime.start(i64 400, i8* %86) #5
  call void @llvm.lifetime.start(i64 400, i8* %87) #5
  store i32 %and297.i, i32* %arrayidx.i.i, align 16
  store i32 %sub302.i, i32* %arrayidx2.i.i, align 16
  store i32 2, i32* %arrayidx4.i.i, align 16
  br label %while.body.lr.ph.i.i

while.body.lr.ph.i.i:                             ; preds = %while.cond.outer.backedge.i.i, %if.end312.i
  %.pr.i.i175 = phi i32 [ %.pr.i.i178, %if.end312.i ], [ %.pre949.pre.i, %while.cond.outer.backedge.i.i ]
  %sp.0.ph70.i.i = phi i32 [ 1, %if.end312.i ], [ %sp.0.ph.be.i.i, %while.cond.outer.backedge.i.i ]
  %cmp5.i.i = icmp slt i32 %sp.0.ph70.i.i, 100
  %dec.i.i = add nsw i32 %sp.0.ph70.i.i, -1
  %idxprom6.i.i = sext i32 %dec.i.i to i64
  %arrayidx7.i.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo.i.i, i64 0, i64 %idxprom6.i.i
  %arrayidx9.i.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi.i.i, i64 0, i64 %idxprom6.i.i
  %arrayidx11.i.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackD.i.i, i64 0, i64 %idxprom6.i.i
  %97 = load i32, i32* %arrayidx7.i.i, align 4
  %98 = load i32, i32* %arrayidx9.i.i, align 4
  %sub.i.i = sub nsw i32 %98, %97
  %cmp12.i.i = icmp slt i32 %sub.i.i, 20
  %idxprom19.i.i = sext i32 %97 to i64
  %arrayidx20.i.i = getelementptr inbounds i32, i32* %0, i64 %idxprom19.i.i
  %idxprom23.i.i = sext i32 %98 to i64
  %arrayidx24.i.i = getelementptr inbounds i32, i32* %0, i64 %idxprom23.i.i
  %add28.i.i = add nsw i32 %98, %97
  %shr.i.i = ashr i32 %add28.i.i, 1
  %idxprom29.i.i = sext i32 %shr.i.i to i64
  %arrayidx30.i.i = getelementptr inbounds i32, i32* %0, i64 %idxprom29.i.i
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %if.then120.i.i, %while.body.lr.ph.i.i
  br i1 %cmp5.i.i, label %if.end.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %while.body.i.i
  tail call void @BZ2_bz__AssertH__fail(i32 1001) #5
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %while.body.i.i
  %99 = load i32, i32* %arrayidx11.i.i, align 4
  %cmp13.i.i = icmp sgt i32 %99, 14
  %or.cond.i.i = or i1 %cmp12.i.i, %cmp13.i.i
  br i1 %or.cond.i.i, label %if.then14.i.i, label %if.end18.i.i

if.then14.i.i:                                    ; preds = %if.end.i.i
  %add.i.i.i = add nsw i32 %sub.i.i, 1
  %cmp.i.i.i = icmp slt i32 %add.i.i.i, 2
  br i1 %cmp.i.i.i, label %mainSimpleSort.exit.i.i, label %while.cond.i.i.i

while.cond.i.i.i:                                 ; preds = %if.then14.i.i, %while.cond.i.i.i
  %indvars.iv203.i.i.i = phi i64 [ %indvars.iv.next204.i.i.i, %while.cond.i.i.i ], [ 0, %if.then14.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds [14 x i32], [14 x i32]* @incs, i64 0, i64 %indvars.iv203.i.i.i
  %100 = load i32, i32* %arrayidx.i.i.i, align 4
  %cmp1.i.i.i = icmp sgt i32 %100, %sub.i.i
  %indvars.iv.next204.i.i.i = add nuw nsw i64 %indvars.iv203.i.i.i, 1
  br i1 %cmp1.i.i.i, label %for.cond.preheader.i.i.i, label %while.cond.i.i.i

for.cond.preheader.i.i.i:                         ; preds = %while.cond.i.i.i
  %101 = trunc i64 %indvars.iv203.i.i.i to i32
  %cmp2196.i.i.i = icmp sgt i32 %101, 0
  br i1 %cmp2196.i.i.i, label %for.body.preheader.i.i.i, label %mainSimpleSort.exit.i.i

for.body.preheader.i.i.i:                         ; preds = %for.cond.preheader.i.i.i
  %sext.i.i.i = shl i64 %indvars.iv203.i.i.i, 32
  %102 = ashr exact i64 %sext.i.i.i, 32
  br label %for.body.i.i.i

for.cond.loopexit.i.i.i:                          ; preds = %while.end60.i.i.i, %while.end31.i.i.i, %while.body7.i.i.i
  %cmp2.i.i.i = icmp sgt i64 %indvars.iv201.i.i.i, 1
  br i1 %cmp2.i.i.i, label %for.body.i.i.i, label %mainSimpleSort.exit.i.i.loopexit

for.body.i.i.i:                                   ; preds = %for.cond.loopexit.i.i.i, %for.body.preheader.i.i.i
  %indvars.iv201.i.i.i = phi i64 [ %102, %for.body.preheader.i.i.i ], [ %indvars.iv.next202.i.i.i, %for.cond.loopexit.i.i.i ]
  %indvars.iv.next202.i.i.i = add nsw i64 %indvars.iv201.i.i.i, -1
  %arrayidx4.i.i.i = getelementptr inbounds [14 x i32], [14 x i32]* @incs, i64 0, i64 %indvars.iv.next202.i.i.i
  %103 = load i32, i32* %arrayidx4.i.i.i, align 4
  %add5.i.i.i = add i32 %103, %97
  %104 = sext i32 %add5.i.i.i to i64
  br label %while.body7.i.i.i

while.body7.i.i.i:                                ; preds = %while.end89.i.i.i, %for.body.i.i.i
  %indvars.iv.i.i.i = phi i64 [ %indvars.iv.next.i.i.i, %while.end89.i.i.i ], [ %104, %for.body.i.i.i ]
  %cmp8.i.i.i = icmp sgt i64 %indvars.iv.i.i.i, %idxprom23.i.i
  br i1 %cmp8.i.i.i, label %for.cond.loopexit.i.i.i, label %if.end10.i.i.i

if.end10.i.i.i:                                   ; preds = %while.body7.i.i.i
  %arrayidx12.i.i.i = getelementptr inbounds i32, i32* %0, i64 %indvars.iv.i.i.i
  %105 = load i32, i32* %arrayidx12.i.i.i, align 4
  %add18.i.i.i = add i32 %105, %99
  %106 = trunc i64 %indvars.iv.i.i.i to i32
  br label %while.cond13.i.i.i

while.cond13.i.i.i:                               ; preds = %while.body19.i.i.i, %if.end10.i.i.i
  %j.0.i.i.i = phi i32 [ %106, %if.end10.i.i.i ], [ %sub14.i.i.i, %while.body19.i.i.i ]
  %sub14.i.i.i = sub nsw i32 %j.0.i.i.i, %103
  %idxprom15.i.i.i = sext i32 %sub14.i.i.i to i64
  %arrayidx16.i.i.i = getelementptr inbounds i32, i32* %0, i64 %idxprom15.i.i.i
  %107 = load i32, i32* %arrayidx16.i.i.i, align 4
  %add17.i.i.i = add i32 %107, %99
  %call.i.i.i = call fastcc zeroext i8 @mainGtU(i32 %add17.i.i.i, i32 %add18.i.i.i, i8* %1, i16* %9, i32 %3, i32* nonnull %budget) #5
  %tobool.i.i.i = icmp eq i8 %call.i.i.i, 0
  br i1 %tobool.i.i.i, label %while.end31.i.i.i, label %while.body19.i.i.i

while.body19.i.i.i:                               ; preds = %while.cond13.i.i.i
  %108 = load i32, i32* %arrayidx16.i.i.i, align 4
  %idxprom23.i.i.i = sext i32 %j.0.i.i.i to i64
  %arrayidx24.i.i.i = getelementptr inbounds i32, i32* %0, i64 %idxprom23.i.i.i
  store i32 %108, i32* %arrayidx24.i.i.i, align 4
  %cmp28.i.i.i = icmp slt i32 %sub14.i.i.i, %add5.i.i.i
  br i1 %cmp28.i.i.i, label %while.end31.i.i.i, label %while.cond13.i.i.i

while.end31.i.i.i:                                ; preds = %while.body19.i.i.i, %while.cond13.i.i.i
  %j.1.i.i.i = phi i32 [ %sub14.i.i.i, %while.body19.i.i.i ], [ %j.0.i.i.i, %while.cond13.i.i.i ]
  %idxprom32.i.i.i = sext i32 %j.1.i.i.i to i64
  %arrayidx33.i.i.i = getelementptr inbounds i32, i32* %0, i64 %idxprom32.i.i.i
  store i32 %105, i32* %arrayidx33.i.i.i, align 4
  %109 = add nsw i64 %indvars.iv.i.i.i, 1
  %cmp35.i.i.i = icmp slt i64 %indvars.iv.i.i.i, %idxprom23.i.i
  br i1 %cmp35.i.i.i, label %if.end37.i.i.i, label %for.cond.loopexit.i.i.i

if.end37.i.i.i:                                   ; preds = %while.end31.i.i.i
  %arrayidx39.i.i.i = getelementptr inbounds i32, i32* %0, i64 %109
  %110 = load i32, i32* %arrayidx39.i.i.i, align 4
  %add45.i.i.i = add i32 %110, %99
  %111 = trunc i64 %109 to i32
  br label %while.cond40.i.i.i

while.cond40.i.i.i:                               ; preds = %while.body48.i.i.i, %if.end37.i.i.i
  %j.2.i.i.i = phi i32 [ %111, %if.end37.i.i.i ], [ %sub41.i.i.i, %while.body48.i.i.i ]
  %sub41.i.i.i = sub nsw i32 %j.2.i.i.i, %103
  %idxprom42.i.i.i = sext i32 %sub41.i.i.i to i64
  %arrayidx43.i.i.i = getelementptr inbounds i32, i32* %0, i64 %idxprom42.i.i.i
  %112 = load i32, i32* %arrayidx43.i.i.i, align 4
  %add44.i.i.i = add i32 %112, %99
  %call46.i.i.i = call fastcc zeroext i8 @mainGtU(i32 %add44.i.i.i, i32 %add45.i.i.i, i8* %1, i16* %9, i32 %3, i32* nonnull %budget) #5
  %tobool47.i.i.i = icmp eq i8 %call46.i.i.i, 0
  br i1 %tobool47.i.i.i, label %while.end60.i.i.i, label %while.body48.i.i.i

while.body48.i.i.i:                               ; preds = %while.cond40.i.i.i
  %113 = load i32, i32* %arrayidx43.i.i.i, align 4
  %idxprom52.i.i.i = sext i32 %j.2.i.i.i to i64
  %arrayidx53.i.i.i = getelementptr inbounds i32, i32* %0, i64 %idxprom52.i.i.i
  store i32 %113, i32* %arrayidx53.i.i.i, align 4
  %cmp57.i.i.i = icmp slt i32 %sub41.i.i.i, %add5.i.i.i
  br i1 %cmp57.i.i.i, label %while.end60.i.i.i, label %while.cond40.i.i.i

while.end60.i.i.i:                                ; preds = %while.body48.i.i.i, %while.cond40.i.i.i
  %j.3.i.i.i = phi i32 [ %sub41.i.i.i, %while.body48.i.i.i ], [ %j.2.i.i.i, %while.cond40.i.i.i ]
  %idxprom61.i.i.i = sext i32 %j.3.i.i.i to i64
  %arrayidx62.i.i.i = getelementptr inbounds i32, i32* %0, i64 %idxprom61.i.i.i
  store i32 %110, i32* %arrayidx62.i.i.i, align 4
  %114 = add nsw i64 %indvars.iv.i.i.i, 2
  %cmp64.i.i.i = icmp sgt i64 %114, %idxprom23.i.i
  br i1 %cmp64.i.i.i, label %for.cond.loopexit.i.i.i, label %if.end66.i.i.i

if.end66.i.i.i:                                   ; preds = %while.end60.i.i.i
  %arrayidx68.i.i.i = getelementptr inbounds i32, i32* %0, i64 %114
  %115 = load i32, i32* %arrayidx68.i.i.i, align 4
  %add74.i.i.i = add i32 %115, %99
  %116 = trunc i64 %114 to i32
  br label %while.cond69.i.i.i

while.cond69.i.i.i:                               ; preds = %while.body77.i.i.i, %if.end66.i.i.i
  %j.4.i.i.i = phi i32 [ %116, %if.end66.i.i.i ], [ %sub70.i.i.i, %while.body77.i.i.i ]
  %sub70.i.i.i = sub nsw i32 %j.4.i.i.i, %103
  %idxprom71.i.i.i = sext i32 %sub70.i.i.i to i64
  %arrayidx72.i.i.i = getelementptr inbounds i32, i32* %0, i64 %idxprom71.i.i.i
  %117 = load i32, i32* %arrayidx72.i.i.i, align 4
  %add73.i.i.i = add i32 %117, %99
  %call75.i.i.i = call fastcc zeroext i8 @mainGtU(i32 %add73.i.i.i, i32 %add74.i.i.i, i8* %1, i16* %9, i32 %3, i32* nonnull %budget) #5
  %tobool76.i.i.i = icmp eq i8 %call75.i.i.i, 0
  br i1 %tobool76.i.i.i, label %while.end89.i.i.i, label %while.body77.i.i.i

while.body77.i.i.i:                               ; preds = %while.cond69.i.i.i
  %118 = load i32, i32* %arrayidx72.i.i.i, align 4
  %idxprom81.i.i.i = sext i32 %j.4.i.i.i to i64
  %arrayidx82.i.i.i = getelementptr inbounds i32, i32* %0, i64 %idxprom81.i.i.i
  store i32 %118, i32* %arrayidx82.i.i.i, align 4
  %cmp86.i.i.i = icmp slt i32 %sub70.i.i.i, %add5.i.i.i
  br i1 %cmp86.i.i.i, label %while.end89.i.i.i, label %while.cond69.i.i.i

while.end89.i.i.i:                                ; preds = %while.body77.i.i.i, %while.cond69.i.i.i
  %j.5.i.i.i = phi i32 [ %sub70.i.i.i, %while.body77.i.i.i ], [ %j.4.i.i.i, %while.cond69.i.i.i ]
  %idxprom90.i.i.i = sext i32 %j.5.i.i.i to i64
  %arrayidx91.i.i.i = getelementptr inbounds i32, i32* %0, i64 %idxprom90.i.i.i
  store i32 %115, i32* %arrayidx91.i.i.i, align 4
  %119 = load i32, i32* %budget, align 4
  %cmp93.i.i.i = icmp slt i32 %119, 0
  %indvars.iv.next.i.i.i = add nsw i64 %indvars.iv.i.i.i, 3
  br i1 %cmp93.i.i.i, label %mainQSort3.exit.i, label %while.body7.i.i.i

mainSimpleSort.exit.i.i.loopexit:                 ; preds = %for.cond.loopexit.i.i.i
  %.pr.i.i.pre = load i32, i32* %budget, align 4
  br label %mainSimpleSort.exit.i.i

mainSimpleSort.exit.i.i:                          ; preds = %mainSimpleSort.exit.i.i.loopexit, %for.cond.preheader.i.i.i, %if.then14.i.i
  %.pr.i.i = phi i32 [ %.pr.i.i.pre, %mainSimpleSort.exit.i.i.loopexit ], [ %.pr.i.i175, %for.cond.preheader.i.i.i ], [ %.pr.i.i175, %if.then14.i.i ]
  %cmp15.i.i = icmp slt i32 %.pr.i.i, 0
  br i1 %cmp15.i.i, label %mainQSort3.exit.i, label %while.cond.outer.backedge.i.i

while.cond.outer.backedge.i.i:                    ; preds = %while.end185.i.i, %mainSimpleSort.exit.i.i
  %.pre949.pre.i = phi i32 [ %.pr.i.i175, %while.end185.i.i ], [ %.pr.i.i, %mainSimpleSort.exit.i.i ]
  %sp.0.ph.be.i.i = phi i32 [ %inc301.i.i, %while.end185.i.i ], [ %dec.i.i, %mainSimpleSort.exit.i.i ]
  %cmp.i.i = icmp sgt i32 %sp.0.ph.be.i.i, 0
  br i1 %cmp.i.i, label %while.body.lr.ph.i.i, label %mainQSort3.exit.i

if.end18.i.i:                                     ; preds = %if.end.i.i
  %120 = load i32, i32* %arrayidx20.i.i, align 4
  %add.i.i = add i32 %120, %99
  %idxprom21.i.i = zext i32 %add.i.i to i64
  %arrayidx22.i.i = getelementptr inbounds i8, i8* %1, i64 %idxprom21.i.i
  %121 = load i8, i8* %arrayidx22.i.i, align 1
  %122 = load i32, i32* %arrayidx24.i.i, align 4
  %add25.i.i = add i32 %122, %99
  %idxprom26.i.i = zext i32 %add25.i.i to i64
  %arrayidx27.i.i = getelementptr inbounds i8, i8* %1, i64 %idxprom26.i.i
  %123 = load i8, i8* %arrayidx27.i.i, align 1
  %124 = load i32, i32* %arrayidx30.i.i, align 4
  %add31.i.i = add i32 %124, %99
  %idxprom32.i.i = zext i32 %add31.i.i to i64
  %arrayidx33.i.i = getelementptr inbounds i8, i8* %1, i64 %idxprom32.i.i
  %125 = load i8, i8* %arrayidx33.i.i, align 1
  %cmp.i1.i.i = icmp ugt i8 %121, %123
  %a.b.i.i.i = select i1 %cmp.i1.i.i, i8 %121, i8 %123
  %b.a.i.i.i = select i1 %cmp.i1.i.i, i8 %123, i8 %121
  %cmp5.i.i.i = icmp ugt i8 %a.b.i.i.i, %125
  %cmp10.i.i.i = icmp ugt i8 %b.a.i.i.i, %125
  %b.a.c.i.i.i = select i1 %cmp10.i.i.i, i8 %b.a.i.i.i, i8 %125
  %call2.i.i = select i1 %cmp5.i.i.i, i8 %b.a.c.i.i.i, i8 %a.b.i.i.i
  br label %while.body37.outer.i.i

while.body37.outer.i.i:                           ; preds = %if.end105.i.i, %if.end18.i.i
  %gtHi.0.ph.i.i = phi i32 [ %98, %if.end18.i.i ], [ %142, %if.end105.i.i ]
  %ltLo.0.ph.i.i = phi i32 [ %97, %if.end18.i.i ], [ %ltLo.0.ph5.lcssa.i.i, %if.end105.i.i ]
  %unHi.0.ph.i.i = phi i32 [ %98, %if.end18.i.i ], [ %dec116.i.i, %if.end105.i.i ]
  %unLo.0.ph.i.i = phi i32 [ %97, %if.end18.i.i ], [ %inc115.i.i, %if.end105.i.i ]
  %cmp382835.i.i = icmp sgt i32 %unLo.0.ph.i.i, %unHi.0.ph.i.i
  br i1 %cmp382835.i.i, label %while.body69.preheader.i.i, label %if.end41.lr.ph.preheader.i.i

if.end41.lr.ph.preheader.i.i:                     ; preds = %while.body37.outer.i.i
  %126 = sext i32 %unHi.0.ph.i.i to i64
  %127 = sext i32 %ltLo.0.ph.i.i to i64
  br label %if.end41.lr.ph.i.i

if.end41.lr.ph.i.i:                               ; preds = %if.then51.i.i, %if.end41.lr.ph.preheader.i.i
  %indvars.iv115.i.i = phi i64 [ %127, %if.end41.lr.ph.preheader.i.i ], [ %indvars.iv.next116.i.i, %if.then51.i.i ]
  %unLo.0.ph737.i.i = phi i32 [ %unLo.0.ph.i.i, %if.end41.lr.ph.preheader.i.i ], [ %inc61.i.i, %if.then51.i.i ]
  %ltLo.0.ph536.i.i = phi i32 [ %ltLo.0.ph.i.i, %if.end41.lr.ph.preheader.i.i ], [ %inc60.i.i, %if.then51.i.i ]
  %128 = sext i32 %unLo.0.ph737.i.i to i64
  br label %if.end41.i.i

if.end41.i.i:                                     ; preds = %if.end66.i.i, %if.end41.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %if.end66.i.i ], [ %128, %if.end41.lr.ph.i.i ]
  %unLo.029.i.i = phi i32 [ %inc67.i.i, %if.end66.i.i ], [ %unLo.0.ph737.i.i, %if.end41.lr.ph.i.i ]
  %arrayidx43.i.i = getelementptr inbounds i32, i32* %0, i64 %indvars.iv.i.i
  %129 = load i32, i32* %arrayidx43.i.i, align 4
  %add44.i.i = add i32 %129, %99
  %idxprom45.i.i = zext i32 %add44.i.i to i64
  %arrayidx46.i.i = getelementptr inbounds i8, i8* %1, i64 %idxprom45.i.i
  %130 = load i8, i8* %arrayidx46.i.i, align 1
  %cmp49.i.i = icmp eq i8 %130, %call2.i.i
  br i1 %cmp49.i.i, label %if.then51.i.i, label %if.end62.i.i

if.then51.i.i:                                    ; preds = %if.end41.i.i
  %131 = trunc i64 %indvars.iv.i.i to i32
  %arrayidx55.i.i = getelementptr inbounds i32, i32* %0, i64 %indvars.iv115.i.i
  %132 = load i32, i32* %arrayidx55.i.i, align 4
  store i32 %132, i32* %arrayidx43.i.i, align 4
  store i32 %129, i32* %arrayidx55.i.i, align 4
  %inc60.i.i = add nsw i32 %ltLo.0.ph536.i.i, 1
  %inc61.i.i = add nsw i32 %131, 1
  %cmp3828.i.i = icmp slt i32 %131, %unHi.0.ph.i.i
  %indvars.iv.next116.i.i = add i64 %indvars.iv115.i.i, 1
  br i1 %cmp3828.i.i, label %if.end41.lr.ph.i.i, label %while.body69.preheader.i.i

if.end62.i.i:                                     ; preds = %if.end41.i.i
  %cmp63.i.i = icmp ugt i8 %130, %call2.i.i
  %133 = trunc i64 %indvars.iv.i.i to i32
  br i1 %cmp63.i.i, label %while.body69.preheader.loopexit.i.i, label %if.end66.i.i

while.body69.preheader.loopexit.i.i:              ; preds = %if.end66.i.i, %if.end62.i.i
  %unLo.0.lcssa.ph.i.i = phi i32 [ %inc67.i.i, %if.end66.i.i ], [ %133, %if.end62.i.i ]
  %134 = trunc i64 %indvars.iv115.i.i to i32
  br label %while.body69.preheader.i.i

while.body69.preheader.i.i:                       ; preds = %if.then51.i.i, %while.body69.preheader.loopexit.i.i, %while.body37.outer.i.i
  %ltLo.0.ph5.lcssa.i.i = phi i32 [ %ltLo.0.ph.i.i, %while.body37.outer.i.i ], [ %134, %while.body69.preheader.loopexit.i.i ], [ %inc60.i.i, %if.then51.i.i ]
  %unLo.0.lcssa.i.i = phi i32 [ %unLo.0.ph.i.i, %while.body37.outer.i.i ], [ %unLo.0.lcssa.ph.i.i, %while.body69.preheader.loopexit.i.i ], [ %inc61.i.i, %if.then51.i.i ]
  %cmp704050.i.i = icmp sgt i32 %unLo.0.lcssa.i.i, %unHi.0.ph.i.i
  br i1 %cmp704050.i.i, label %while.end117.i.i, label %if.end73.lr.ph.preheader.i.i

if.end73.lr.ph.preheader.i.i:                     ; preds = %while.body69.preheader.i.i
  %135 = sext i32 %unLo.0.lcssa.i.i to i64
  %136 = sext i32 %gtHi.0.ph.i.i to i64
  br label %if.end73.lr.ph.i.i

if.end66.i.i:                                     ; preds = %if.end62.i.i
  %inc67.i.i = add nsw i32 %unLo.029.i.i, 1
  %cmp38.i.i = icmp slt i64 %indvars.iv.i.i, %126
  %indvars.iv.next.i.i = add nsw i64 %indvars.iv.i.i, 1
  br i1 %cmp38.i.i, label %if.end41.i.i, label %while.body69.preheader.loopexit.i.i

if.end73.i.i:                                     ; preds = %if.end99.i.i, %if.end73.lr.ph.i.i
  %indvars.iv117.i.i = phi i64 [ %indvars.iv.next118.i.i, %if.end99.i.i ], [ %141, %if.end73.lr.ph.i.i ]
  %unHi.141.i.i = phi i32 [ %dec100.i.i, %if.end99.i.i ], [ %unHi.1.ph52.i.i, %if.end73.lr.ph.i.i ]
  %arrayidx75.i.i = getelementptr inbounds i32, i32* %0, i64 %indvars.iv117.i.i
  %137 = load i32, i32* %arrayidx75.i.i, align 4
  %add76.i.i = add i32 %137, %99
  %idxprom77.i.i = zext i32 %add76.i.i to i64
  %arrayidx78.i.i = getelementptr inbounds i8, i8* %1, i64 %idxprom77.i.i
  %138 = load i8, i8* %arrayidx78.i.i, align 1
  %cmp81.i.i = icmp eq i8 %138, %call2.i.i
  br i1 %cmp81.i.i, label %if.then83.i.i, label %if.end95.i.i

if.then83.i.i:                                    ; preds = %if.end73.i.i
  %139 = trunc i64 %indvars.iv117.i.i to i32
  %arrayidx88.i.i = getelementptr inbounds i32, i32* %0, i64 %indvars.iv119.i.i
  %140 = load i32, i32* %arrayidx88.i.i, align 4
  store i32 %140, i32* %arrayidx75.i.i, align 4
  store i32 %137, i32* %arrayidx88.i.i, align 4
  %dec93.i.i = add nsw i32 %gtHi.1.ph51.i.i, -1
  %dec94.i.i = add nsw i32 %139, -1
  %cmp7040.i.i = icmp slt i32 %unLo.0.lcssa.i.i, %139
  %indvars.iv.next120.i.i = add i64 %indvars.iv119.i.i, -1
  br i1 %cmp7040.i.i, label %if.end73.lr.ph.i.i, label %while.end117.i.i

if.end73.lr.ph.i.i:                               ; preds = %if.then83.i.i, %if.end73.lr.ph.preheader.i.i
  %indvars.iv119.i.i = phi i64 [ %136, %if.end73.lr.ph.preheader.i.i ], [ %indvars.iv.next120.i.i, %if.then83.i.i ]
  %unHi.1.ph52.i.i = phi i32 [ %unHi.0.ph.i.i, %if.end73.lr.ph.preheader.i.i ], [ %dec94.i.i, %if.then83.i.i ]
  %gtHi.1.ph51.i.i = phi i32 [ %gtHi.0.ph.i.i, %if.end73.lr.ph.preheader.i.i ], [ %dec93.i.i, %if.then83.i.i ]
  %141 = sext i32 %unHi.1.ph52.i.i to i64
  br label %if.end73.i.i

if.end95.i.i:                                     ; preds = %if.end73.i.i
  %cmp96.i.i = icmp ult i8 %138, %call2.i.i
  br i1 %cmp96.i.i, label %if.end105.i.i, label %if.end99.i.i

if.end99.i.i:                                     ; preds = %if.end95.i.i
  %dec100.i.i = add nsw i32 %unHi.141.i.i, -1
  %cmp70.i.i = icmp slt i64 %135, %indvars.iv117.i.i
  %indvars.iv.next118.i.i = add nsw i64 %indvars.iv117.i.i, -1
  br i1 %cmp70.i.i, label %if.end73.i.i, label %while.end117.loopexit.i.i

if.end105.i.i:                                    ; preds = %if.end95.i.i
  %142 = trunc i64 %indvars.iv119.i.i to i32
  %143 = trunc i64 %indvars.iv117.i.i to i32
  %arrayidx108.i.i = getelementptr inbounds i32, i32* %0, i64 %135
  %144 = load i32, i32* %arrayidx108.i.i, align 4
  store i32 %137, i32* %arrayidx108.i.i, align 4
  store i32 %144, i32* %arrayidx75.i.i, align 4
  %inc115.i.i = add nsw i32 %unLo.0.lcssa.i.i, 1
  %dec116.i.i = add nsw i32 %143, -1
  br label %while.body37.outer.i.i

while.end117.loopexit.i.i:                        ; preds = %if.end99.i.i
  %145 = trunc i64 %indvars.iv119.i.i to i32
  br label %while.end117.i.i

while.end117.i.i:                                 ; preds = %while.body69.preheader.i.i, %if.then83.i.i, %while.end117.loopexit.i.i
  %gtHi.1.ph.lcssa16.i.i = phi i32 [ %145, %while.end117.loopexit.i.i ], [ %dec93.i.i, %if.then83.i.i ], [ %gtHi.0.ph.i.i, %while.body69.preheader.i.i ]
  %unHi.1.lcssa.i.i = phi i32 [ %dec100.i.i, %while.end117.loopexit.i.i ], [ %dec94.i.i, %if.then83.i.i ], [ %unHi.0.ph.i.i, %while.body69.preheader.i.i ]
  %cmp118.i.i = icmp slt i32 %gtHi.1.ph.lcssa16.i.i, %ltLo.0.ph5.lcssa.i.i
  br i1 %cmp118.i.i, label %if.then120.i.i, label %if.end129.i.i

if.then120.i.i:                                   ; preds = %while.end117.i.i
  %add125.i.i = add nsw i32 %99, 1
  store i32 %add125.i.i, i32* %arrayidx11.i.i, align 4
  br label %while.body.i.i

if.end129.i.i:                                    ; preds = %while.end117.i.i
  %sub130.i.i = sub nsw i32 %ltLo.0.ph5.lcssa.i.i, %97
  %sub131.i.i = sub nsw i32 %unLo.0.lcssa.i.i, %ltLo.0.ph5.lcssa.i.i
  %cmp132.i.i = icmp slt i32 %sub130.i.i, %sub131.i.i
  %sub130.sub131.i.i = select i1 %cmp132.i.i, i32 %sub130.i.i, i32 %sub131.i.i
  %cmp13861.i.i = icmp sgt i32 %sub130.sub131.i.i, 0
  br i1 %cmp13861.i.i, label %while.body140.preheader.i.i, label %while.end153.i.i

while.body140.preheader.i.i:                      ; preds = %if.end129.i.i
  %146 = add i32 %unLo.0.lcssa.i.i, 1
  %147 = add i32 %97, -1
  %148 = sub i32 %147, %ltLo.0.ph5.lcssa.i.i
  %149 = add i32 %ltLo.0.ph5.lcssa.i.i, -1
  %150 = sub i32 %149, %unLo.0.lcssa.i.i
  %151 = icmp sgt i32 %148, %150
  %smax.i.i = select i1 %151, i32 %148, i32 %150
  %152 = add i32 %146, %smax.i.i
  %153 = sext i32 %152 to i64
  %154 = add i32 %97, -1
  %155 = sub i32 %154, %ltLo.0.ph5.lcssa.i.i
  %156 = icmp sgt i32 %150, %155
  %smax322 = select i1 %156, i32 %150, i32 %155
  %157 = icmp sgt i32 %smax322, -2
  %smax323 = select i1 %157, i32 %smax322, i32 -2
  %158 = icmp sgt i32 %150, %155
  %smax324 = select i1 %158, i32 %150, i32 %155
  %159 = sub i32 %smax323, %smax324
  %160 = zext i32 %159 to i64
  %161 = add nuw nsw i64 %160, 1
  %min.iters.check325 = icmp ult i64 %161, 4
  br i1 %min.iters.check325, label %while.body140.i.i, label %min.iters.checked326

min.iters.checked326:                             ; preds = %while.body140.preheader.i.i
  %n.vec328 = and i64 %161, 8589934588
  %cmp.zero329 = icmp eq i64 %n.vec328, 0
  br i1 %cmp.zero329, label %while.body140.i.i, label %vector.memcheck346

vector.memcheck346:                               ; preds = %min.iters.checked326
  %162 = sext i32 %97 to i64
  %scevgep331 = getelementptr i32, i32* %0, i64 %162
  %163 = add i32 %ltLo.0.ph5.lcssa.i.i, -1
  %164 = sub i32 %163, %unLo.0.lcssa.i.i
  %165 = add i32 %97, -1
  %166 = sub i32 %165, %ltLo.0.ph5.lcssa.i.i
  %167 = icmp sgt i32 %164, %166
  %smax333 = select i1 %167, i32 %164, i32 %166
  %168 = icmp sgt i32 %smax333, -2
  %smax334 = select i1 %168, i32 %smax333, i32 -2
  %169 = icmp sgt i32 %164, %166
  %smax335 = select i1 %169, i32 %164, i32 %166
  %170 = sub i32 %smax334, %smax335
  %171 = zext i32 %170 to i64
  %172 = add nsw i64 %162, %171
  %scevgep336 = getelementptr i32, i32* %0, i64 %172
  %173 = add i32 %unLo.0.lcssa.i.i, 1
  %174 = add i32 %173, %smax335
  %175 = sext i32 %174 to i64
  %scevgep338 = getelementptr i32, i32* %0, i64 %175
  %176 = add nsw i64 %175, %171
  %scevgep340 = getelementptr i32, i32* %0, i64 %176
  %bound0342 = icmp ule i32* %scevgep331, %scevgep340
  %bound1343 = icmp ule i32* %scevgep338, %scevgep336
  %memcheck.conflict345 = and i1 %bound0342, %bound1343
  %ind.end351 = add nsw i64 %idxprom19.i.i, %n.vec328
  %ind.end353 = add nsw i64 %153, %n.vec328
  %cast.crd355 = trunc i64 %n.vec328 to i32
  %ind.end356 = sub i32 %sub130.sub131.i.i, %cast.crd355
  br i1 %memcheck.conflict345, label %while.body140.i.i, label %vector.body319

vector.body319:                                   ; preds = %vector.memcheck346, %vector.body319
  %index348 = phi i64 [ %index.next349, %vector.body319 ], [ 0, %vector.memcheck346 ]
  %offset.idx358 = add i64 %idxprom19.i.i, %index348
  %offset.idx362 = add i64 %153, %index348
  %177 = getelementptr inbounds i32, i32* %0, i64 %offset.idx358
  %178 = bitcast i32* %177 to <4 x i32>*
  %wide.load370 = load <4 x i32>, <4 x i32>* %178, align 4
  %179 = getelementptr inbounds i32, i32* %0, i64 %offset.idx362
  %180 = bitcast i32* %179 to <4 x i32>*
  %wide.load371 = load <4 x i32>, <4 x i32>* %180, align 4
  %181 = bitcast i32* %177 to <4 x i32>*
  store <4 x i32> %wide.load371, <4 x i32>* %181, align 4
  %182 = bitcast i32* %179 to <4 x i32>*
  store <4 x i32> %wide.load370, <4 x i32>* %182, align 4
  %index.next349 = add i64 %index348, 4
  %183 = icmp eq i64 %index.next349, %n.vec328
  br i1 %183, label %middle.block320, label %vector.body319, !llvm.loop !6

middle.block320:                                  ; preds = %vector.body319
  %cmp.n357 = icmp eq i64 %161, %n.vec328
  br i1 %cmp.n357, label %while.end153.i.i, label %while.body140.i.i

while.body140.i.i:                                ; preds = %while.body140.preheader.i.i, %min.iters.checked326, %vector.memcheck346, %middle.block320, %while.body140.i.i
  %indvars.iv123.i.i = phi i64 [ %indvars.iv.next124.i.i, %while.body140.i.i ], [ %ind.end351, %middle.block320 ], [ %idxprom19.i.i, %while.body140.preheader.i.i ], [ %idxprom19.i.i, %min.iters.checked326 ], [ %idxprom19.i.i, %vector.memcheck346 ]
  %indvars.iv121.i.i = phi i64 [ %indvars.iv.next122.i.i, %while.body140.i.i ], [ %ind.end353, %middle.block320 ], [ %153, %while.body140.preheader.i.i ], [ %153, %min.iters.checked326 ], [ %153, %vector.memcheck346 ]
  %yyn.064.i.i = phi i32 [ %dec152.i.i, %while.body140.i.i ], [ %ind.end356, %middle.block320 ], [ %sub130.sub131.i.i, %while.body140.preheader.i.i ], [ %sub130.sub131.i.i, %min.iters.checked326 ], [ %sub130.sub131.i.i, %vector.memcheck346 ]
  %arrayidx143.i.i = getelementptr inbounds i32, i32* %0, i64 %indvars.iv123.i.i
  %184 = load i32, i32* %arrayidx143.i.i, align 4
  %arrayidx145.i.i = getelementptr inbounds i32, i32* %0, i64 %indvars.iv121.i.i
  %185 = load i32, i32* %arrayidx145.i.i, align 4
  store i32 %185, i32* %arrayidx143.i.i, align 4
  store i32 %184, i32* %arrayidx145.i.i, align 4
  %dec152.i.i = add nsw i32 %yyn.064.i.i, -1
  %cmp138.i.i = icmp sgt i32 %yyn.064.i.i, 1
  %indvars.iv.next122.i.i = add nsw i64 %indvars.iv121.i.i, 1
  %indvars.iv.next124.i.i = add nsw i64 %indvars.iv123.i.i, 1
  br i1 %cmp138.i.i, label %while.body140.i.i, label %while.end153.i.i, !llvm.loop !7

while.end153.i.i:                                 ; preds = %while.body140.i.i, %middle.block320, %if.end129.i.i
  %sub154.i.i = sub nsw i32 %98, %gtHi.1.ph.lcssa16.i.i
  %sub155.i.i = sub nsw i32 %gtHi.1.ph.lcssa16.i.i, %unHi.1.lcssa.i.i
  %cmp156.i.i = icmp slt i32 %sub154.i.i, %sub155.i.i
  %sub154.sub155.i.i = select i1 %cmp156.i.i, i32 %sub154.i.i, i32 %sub155.i.i
  %cmp17066.i.i = icmp sgt i32 %sub154.sub155.i.i, 0
  br i1 %cmp17066.i.i, label %while.body172.preheader.i.i, label %while.end185.i.i

while.body172.preheader.i.i:                      ; preds = %while.end153.i.i
  %sub166.i.i = sub nsw i32 %98, %sub154.sub155.i.i
  %186 = sext i32 %unLo.0.lcssa.i.i to i64
  %187 = add i32 %unHi.1.lcssa.i.i, -1
  %188 = sub i32 %187, %gtHi.1.ph.lcssa16.i.i
  %189 = add i32 %gtHi.1.ph.lcssa16.i.i, -1
  %190 = sub i32 %189, %98
  %191 = icmp sgt i32 %188, %190
  %smax = select i1 %191, i32 %188, i32 %190
  %192 = icmp sgt i32 %smax, -2
  %smax276 = select i1 %192, i32 %smax, i32 -2
  %193 = icmp sgt i32 %188, %190
  %smax277 = select i1 %193, i32 %188, i32 %190
  %194 = sub i32 %smax276, %smax277
  %195 = zext i32 %194 to i64
  %196 = add nuw nsw i64 %195, 1
  %min.iters.check = icmp ult i64 %196, 4
  br i1 %min.iters.check, label %while.body172.i.i, label %min.iters.checked278

min.iters.checked278:                             ; preds = %while.body172.preheader.i.i
  %n.vec = and i64 %196, 8589934588
  %cmp.zero = icmp eq i64 %n.vec, 0
  br i1 %cmp.zero, label %while.body172.i.i, label %vector.memcheck295

vector.memcheck295:                               ; preds = %min.iters.checked278
  %197 = sext i32 %unLo.0.lcssa.i.i to i64
  %scevgep280 = getelementptr i32, i32* %0, i64 %197
  %198 = add i32 %unHi.1.lcssa.i.i, -1
  %199 = sub i32 %198, %gtHi.1.ph.lcssa16.i.i
  %200 = add i32 %gtHi.1.ph.lcssa16.i.i, -1
  %201 = sub i32 %200, %98
  %202 = icmp sgt i32 %199, %201
  %smax282 = select i1 %202, i32 %199, i32 %201
  %203 = icmp sgt i32 %smax282, -2
  %smax283 = select i1 %203, i32 %smax282, i32 -2
  %204 = icmp sgt i32 %199, %201
  %smax284 = select i1 %204, i32 %199, i32 %201
  %205 = sub i32 %smax283, %smax284
  %206 = zext i32 %205 to i64
  %207 = add nsw i64 %197, %206
  %scevgep285 = getelementptr i32, i32* %0, i64 %207
  %208 = add i32 %98, 2
  %209 = add i32 %208, %smax284
  %210 = sext i32 %209 to i64
  %scevgep287 = getelementptr i32, i32* %0, i64 %210
  %211 = add nsw i64 %210, %206
  %scevgep289 = getelementptr i32, i32* %0, i64 %211
  %bound0291 = icmp ule i32* %scevgep280, %scevgep289
  %bound1292 = icmp ule i32* %scevgep287, %scevgep285
  %memcheck.conflict294 = and i1 %bound0291, %bound1292
  %ind.end = add nsw i64 %186, %n.vec
  %cast.crd = trunc i64 %n.vec to i32
  %ind.end301 = add i32 %sub166.i.i, %cast.crd
  %cast.crd303 = trunc i64 %n.vec to i32
  %ind.end304 = sub i32 %sub154.sub155.i.i, %cast.crd303
  br i1 %memcheck.conflict294, label %while.body172.i.i, label %vector.body273

vector.body273:                                   ; preds = %vector.memcheck295, %vector.body273
  %index297 = phi i64 [ %index.next298, %vector.body273 ], [ 0, %vector.memcheck295 ]
  %offset.idx = add i64 %186, %index297
  %212 = trunc i64 %index297 to i32
  %offset.idx309 = add i32 %sub166.i.i, %212
  %213 = getelementptr inbounds i32, i32* %0, i64 %offset.idx
  %214 = bitcast i32* %213 to <4 x i32>*
  %wide.load317 = load <4 x i32>, <4 x i32>* %214, align 4
  %215 = add i32 %offset.idx309, 1
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds i32, i32* %0, i64 %216
  %218 = bitcast i32* %217 to <4 x i32>*
  %wide.load318 = load <4 x i32>, <4 x i32>* %218, align 4
  %219 = bitcast i32* %213 to <4 x i32>*
  store <4 x i32> %wide.load318, <4 x i32>* %219, align 4
  %220 = bitcast i32* %217 to <4 x i32>*
  store <4 x i32> %wide.load317, <4 x i32>* %220, align 4
  %index.next298 = add i64 %index297, 4
  %221 = icmp eq i64 %index.next298, %n.vec
  br i1 %221, label %middle.block274, label %vector.body273, !llvm.loop !8

middle.block274:                                  ; preds = %vector.body273
  %cmp.n305 = icmp eq i64 %196, %n.vec
  br i1 %cmp.n305, label %while.end185.i.i, label %while.body172.i.i

while.body172.i.i:                                ; preds = %while.body172.preheader.i.i, %min.iters.checked278, %vector.memcheck295, %middle.block274, %while.body172.i.i
  %indvars.iv128.i.i = phi i64 [ %indvars.iv.next129.i.i, %while.body172.i.i ], [ %ind.end, %middle.block274 ], [ %186, %while.body172.preheader.i.i ], [ %186, %min.iters.checked278 ], [ %186, %vector.memcheck295 ]
  %yyp2165.069.in.i.i = phi i32 [ %yyp2165.069.i.i, %while.body172.i.i ], [ %ind.end301, %middle.block274 ], [ %sub166.i.i, %while.body172.preheader.i.i ], [ %sub166.i.i, %min.iters.checked278 ], [ %sub166.i.i, %vector.memcheck295 ]
  %yyn168.068.i.i = phi i32 [ %dec184.i.i, %while.body172.i.i ], [ %ind.end304, %middle.block274 ], [ %sub154.sub155.i.i, %while.body172.preheader.i.i ], [ %sub154.sub155.i.i, %min.iters.checked278 ], [ %sub154.sub155.i.i, %vector.memcheck295 ]
  %yyp2165.069.i.i = add nsw i32 %yyp2165.069.in.i.i, 1
  %arrayidx175.i.i = getelementptr inbounds i32, i32* %0, i64 %indvars.iv128.i.i
  %222 = load i32, i32* %arrayidx175.i.i, align 4
  %idxprom176.i.i = sext i32 %yyp2165.069.i.i to i64
  %arrayidx177.i.i = getelementptr inbounds i32, i32* %0, i64 %idxprom176.i.i
  %223 = load i32, i32* %arrayidx177.i.i, align 4
  store i32 %223, i32* %arrayidx175.i.i, align 4
  store i32 %222, i32* %arrayidx177.i.i, align 4
  %dec184.i.i = add nsw i32 %yyn168.068.i.i, -1
  %cmp170.i.i = icmp sgt i32 %yyn168.068.i.i, 1
  %indvars.iv.next129.i.i = add nsw i64 %indvars.iv128.i.i, 1
  br i1 %cmp170.i.i, label %while.body172.i.i, label %while.end185.i.i, !llvm.loop !9

while.end185.i.i:                                 ; preds = %while.body172.i.i, %middle.block274, %while.end153.i.i
  %add186.i.i = sub i32 %97, %ltLo.0.ph5.lcssa.i.i
  %sub187.i.i = add i32 %add186.i.i, %unLo.0.lcssa.i.i
  %sub188.i.i = add nsw i32 %sub187.i.i, -1
  %sub190.i.i = sub nsw i32 %98, %sub155.i.i
  %add191.i.i = add nsw i32 %sub190.i.i, 1
  %add202.i.i = add nsw i32 %99, 1
  %sub206.i.i = sub nsw i32 %sub188.i.i, %97
  %sub209.i.i = sub nsw i32 %98, %add191.i.i
  %cmp210.i.i = icmp slt i32 %sub206.i.i, %sub209.i.i
  %.add191.i.i = select i1 %cmp210.i.i, i32 %97, i32 %add191.i.i
  %add191..i.i = select i1 %cmp210.i.i, i32 %add191.i.i, i32 %97
  %sub188..i.i = select i1 %cmp210.i.i, i32 %sub188.i.i, i32 %98
  %.sub188.i.i = select i1 %cmp210.i.i, i32 %98, i32 %sub188.i.i
  %sub228.i.i = sub nsw i32 %sub188..i.i, %.add191.i.i
  %sub231.i.i = sub nsw i32 %sub190.i.i, %sub187.i.i
  %cmp232.i.i = icmp slt i32 %sub228.i.i, %sub231.i.i
  %sub187..add191.i.i = select i1 %cmp232.i.i, i32 %sub187.i.i, i32 %.add191.i.i
  %sub188..sub190.i.i = select i1 %cmp232.i.i, i32 %sub188..i.i, i32 %sub190.i.i
  %sub190.sub188..i.i = select i1 %cmp232.i.i, i32 %sub190.i.i, i32 %sub188..i.i
  %.add202.i.i = select i1 %cmp232.i.i, i32 %99, i32 %add202.i.i
  %add202..i.i = select i1 %cmp232.i.i, i32 %add202.i.i, i32 %99
  %.add191.sub187.i.i = select i1 %cmp232.i.i, i32 %.add191.i.i, i32 %sub187.i.i
  %sub251.i.i = sub nsw i32 %.sub188.i.i, %add191..i.i
  %sub254.i.i = sub nsw i32 %sub190.sub188..i.i, %sub187..add191.i.i
  %cmp255.i.i = icmp slt i32 %sub251.i.i, %sub254.i.i
  %add191..nextLo.sroa.10.1.i.i = select i1 %cmp255.i.i, i32 %add191..i.i, i32 %sub187..add191.i.i
  %nextLo.sroa.10.1.add191..i.i = select i1 %cmp255.i.i, i32 %sub187..add191.i.i, i32 %add191..i.i
  %.sub188.nextHi.sroa.10.1.i.i = select i1 %cmp255.i.i, i32 %.sub188.i.i, i32 %sub190.sub188..i.i
  %nextHi.sroa.10.1..sub188.i.i = select i1 %cmp255.i.i, i32 %sub190.sub188..i.i, i32 %.sub188.i.i
  %.nextD.sroa.8.1.i.i = select i1 %cmp255.i.i, i32 %99, i32 %add202..i.i
  %nextD.sroa.8.1..i.i = select i1 %cmp255.i.i, i32 %add202..i.i, i32 %99
  store i32 %nextLo.sroa.10.1.add191..i.i, i32* %arrayidx7.i.i, align 4
  store i32 %nextHi.sroa.10.1..sub188.i.i, i32* %arrayidx9.i.i, align 4
  store i32 %nextD.sroa.8.1..i.i, i32* %arrayidx11.i.i, align 4
  %idxprom283.i.i = sext i32 %sp.0.ph70.i.i to i64
  %arrayidx284.i.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo.i.i, i64 0, i64 %idxprom283.i.i
  store i32 %add191..nextLo.sroa.10.1.i.i, i32* %arrayidx284.i.i, align 4
  %arrayidx287.i.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi.i.i, i64 0, i64 %idxprom283.i.i
  store i32 %.sub188.nextHi.sroa.10.1.i.i, i32* %arrayidx287.i.i, align 4
  %arrayidx290.i.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackD.i.i, i64 0, i64 %idxprom283.i.i
  store i32 %.nextD.sroa.8.1.i.i, i32* %arrayidx290.i.i, align 4
  %inc291.i.i = add nsw i32 %sp.0.ph70.i.i, 1
  %idxprom293.i.i = sext i32 %inc291.i.i to i64
  %arrayidx294.i.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo.i.i, i64 0, i64 %idxprom293.i.i
  store i32 %.add191.sub187.i.i, i32* %arrayidx294.i.i, align 4
  %arrayidx297.i.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi.i.i, i64 0, i64 %idxprom293.i.i
  store i32 %sub188..sub190.i.i, i32* %arrayidx297.i.i, align 4
  %arrayidx300.i.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackD.i.i, i64 0, i64 %idxprom293.i.i
  store i32 %.add202.i.i, i32* %arrayidx300.i.i, align 4
  %inc301.i.i = add nsw i32 %sp.0.ph70.i.i, 2
  br label %while.cond.outer.backedge.i.i

mainQSort3.exit.i:                                ; preds = %mainSimpleSort.exit.i.i, %while.cond.outer.backedge.i.i, %while.end89.i.i.i
  %.pr.i.i181 = phi i32 [ %119, %while.end89.i.i.i ], [ %.pre949.pre.i, %while.cond.outer.backedge.i.i ], [ %.pr.i.i, %mainSimpleSort.exit.i.i ]
  call void @llvm.lifetime.end(i64 400, i8* %87) #5
  call void @llvm.lifetime.end(i64 400, i8* %86) #5
  call void @llvm.lifetime.end(i64 400, i8* %85) #5
  %cmp316.i = icmp slt i32 %.pr.i.i181, 0
  br i1 %cmp316.i, label %mainSort.exit, label %mainQSort3.exit.if.end322_crit_edge.i

mainQSort3.exit.if.end322_crit_edge.i:            ; preds = %mainQSort3.exit.i
  %sub313.i = add i32 %numQSorted.1836.i, 1
  %add314.i = sub i32 %sub313.i, %and297.i
  %add315.i = add i32 %add314.i, %sub302.i
  %.pre950.i = load i32, i32* %arrayidx293.i, align 4
  br label %if.end322.i

if.end322.i:                                      ; preds = %mainQSort3.exit.if.end322_crit_edge.i, %if.then294.i, %if.then289.i
  %.pr.i.i180 = phi i32 [ %.pr.i.i178, %if.then289.i ], [ %.pr.i.i181, %mainQSort3.exit.if.end322_crit_edge.i ], [ %.pr.i.i178, %if.then294.i ]
  %224 = phi i32 [ %92, %if.then289.i ], [ %.pre950.i, %mainQSort3.exit.if.end322_crit_edge.i ], [ %92, %if.then294.i ]
  %numQSorted.4.i = phi i32 [ %numQSorted.1836.i, %if.then289.i ], [ %add315.i, %mainQSort3.exit.if.end322_crit_edge.i ], [ %numQSorted.1836.i, %if.then294.i ]
  %or325.i = or i32 %224, 2097152
  store i32 %or325.i, i32* %arrayidx293.i, align 4
  br label %for.inc327.i

for.inc327.i:                                     ; preds = %if.end322.i, %for.body286.i
  %.pr.i.i179 = phi i32 [ %.pr.i.i180, %if.end322.i ], [ %.pr.i.i178, %for.body286.i ]
  %numQSorted.5.i = phi i32 [ %numQSorted.4.i, %if.end322.i ], [ %numQSorted.1836.i, %for.body286.i ]
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %cmp284.i = icmp slt i64 %indvars.iv.next.i, 256
  br i1 %cmp284.i, label %for.body286.i, label %for.end329.i

for.end329.i:                                     ; preds = %for.inc327.i
  %idxprom330.i = sext i32 %88 to i64
  %arrayidx331.i = getelementptr inbounds [256 x i8], [256 x i8]* %bigDone.i, i64 0, i64 %idxprom330.i
  %225 = load i8, i8* %arrayidx331.i, align 1
  %tobool332.i = icmp eq i8 %225, 0
  br i1 %tobool332.i, label %for.body338.i, label %if.then333.i

if.then333.i:                                     ; preds = %for.end329.i
  tail call void @BZ2_bz__AssertH__fail(i32 1006) #5
  br label %for.body338.i

for.body338.i:                                    ; preds = %if.then333.i, %for.end329.i, %for.body338.i
  %indvars.iv902.i = phi i64 [ %indvars.iv.next903.i, %for.body338.i ], [ 0, %for.end329.i ], [ 0, %if.then333.i ]
  %226 = shl i64 %indvars.iv902.i, 8
  %227 = add nsw i64 %226, %idxprom330.i
  %arrayidx342.i = getelementptr inbounds i32, i32* %2, i64 %227
  %228 = load i32, i32* %arrayidx342.i, align 4
  %and343.i = and i32 %228, -2097153
  %arrayidx345.i = getelementptr inbounds [256 x i32], [256 x i32]* %copyStart.i, i64 0, i64 %indvars.iv902.i
  store i32 %and343.i, i32* %arrayidx345.i, align 4
  %229 = add nsw i64 %227, 1
  %arrayidx350.i = getelementptr inbounds i32, i32* %2, i64 %229
  %230 = load i32, i32* %arrayidx350.i, align 4
  %and351.i = and i32 %230, -2097153
  %sub352.i = add i32 %and351.i, -1
  %arrayidx354.i = getelementptr inbounds [256 x i32], [256 x i32]* %copyEnd.i, i64 0, i64 %indvars.iv902.i
  store i32 %sub352.i, i32* %arrayidx354.i, align 4
  %indvars.iv.next903.i = add nuw nsw i64 %indvars.iv902.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next903.i, 256
  br i1 %exitcond.i, label %for.end357.i, label %for.body338.i

for.end357.i:                                     ; preds = %for.body338.i
  %arrayidx360.i = getelementptr inbounds i32, i32* %2, i64 %89
  %231 = load i32, i32* %arrayidx360.i, align 4
  %and361.i = and i32 %231, -2097153
  %arrayidx364.i = getelementptr inbounds [256 x i32], [256 x i32]* %copyStart.i, i64 0, i64 %idxprom330.i
  %232 = load i32, i32* %arrayidx364.i, align 4
  %cmp365839.i = icmp slt i32 %and361.i, %232
  br i1 %cmp365839.i, label %for.body367.preheader.i, label %for.end390.i

for.body367.preheader.i:                          ; preds = %for.end357.i
  %233 = sext i32 %and361.i to i64
  br label %for.body367.i

for.body367.i:                                    ; preds = %for.inc388.i, %for.body367.preheader.i
  %234 = phi i32 [ %232, %for.body367.preheader.i ], [ %239, %for.inc388.i ]
  %indvars.iv907.i = phi i64 [ %233, %for.body367.preheader.i ], [ %indvars.iv.next908.i, %for.inc388.i ]
  %arrayidx369.i = getelementptr inbounds i32, i32* %0, i64 %indvars.iv907.i
  %235 = load i32, i32* %arrayidx369.i, align 4
  %sub370.i = add i32 %235, -1
  %cmp371.i = icmp slt i32 %sub370.i, 0
  %add374.i = select i1 %cmp371.i, i32 %3, i32 0
  %add374.sub370.i = add nsw i32 %add374.i, %sub370.i
  %idxprom376.i = sext i32 %add374.sub370.i to i64
  %arrayidx377.i = getelementptr inbounds i8, i8* %1, i64 %idxprom376.i
  %236 = load i8, i8* %arrayidx377.i, align 1
  %idxprom378.i = zext i8 %236 to i64
  %arrayidx379.i = getelementptr inbounds [256 x i8], [256 x i8]* %bigDone.i, i64 0, i64 %idxprom378.i
  %237 = load i8, i8* %arrayidx379.i, align 1
  %tobool380.i = icmp eq i8 %237, 0
  br i1 %tobool380.i, label %if.then381.i, label %for.inc388.i

if.then381.i:                                     ; preds = %for.body367.i
  %arrayidx383.i = getelementptr inbounds [256 x i32], [256 x i32]* %copyStart.i, i64 0, i64 %idxprom378.i
  %238 = load i32, i32* %arrayidx383.i, align 4
  %inc384.i = add nsw i32 %238, 1
  store i32 %inc384.i, i32* %arrayidx383.i, align 4
  %idxprom385.i = sext i32 %238 to i64
  %arrayidx386.i = getelementptr inbounds i32, i32* %0, i64 %idxprom385.i
  store i32 %add374.sub370.i, i32* %arrayidx386.i, align 4
  %.pre951.i = load i32, i32* %arrayidx364.i, align 4
  br label %for.inc388.i

for.inc388.i:                                     ; preds = %if.then381.i, %for.body367.i
  %239 = phi i32 [ %234, %for.body367.i ], [ %.pre951.i, %if.then381.i ]
  %indvars.iv.next908.i = add i64 %indvars.iv907.i, 1
  %240 = sext i32 %239 to i64
  %cmp365.i = icmp slt i64 %indvars.iv.next908.i, %240
  br i1 %cmp365.i, label %for.body367.i, label %for.end390.i

for.end390.i:                                     ; preds = %for.inc388.i, %for.end357.i
  %241 = phi i32 [ %232, %for.end357.i ], [ %239, %for.inc388.i ]
  %shl392.i = add i32 %shl290.i, 256
  %idxprom393.i = sext i32 %shl392.i to i64
  %arrayidx394.i = getelementptr inbounds i32, i32* %2, i64 %idxprom393.i
  %242 = load i32, i32* %arrayidx394.i, align 4
  %and395.i = and i32 %242, -2097153
  %j.7841.i = add i32 %and395.i, -1
  %arrayidx399.i = getelementptr inbounds [256 x i32], [256 x i32]* %copyEnd.i, i64 0, i64 %idxprom330.i
  %243 = load i32, i32* %arrayidx399.i, align 4
  %cmp400842.i = icmp sgt i32 %j.7841.i, %243
  br i1 %cmp400842.i, label %for.body402.i, label %for.end425.i

for.body402.i:                                    ; preds = %for.end390.i, %for.cond397.backedge.i
  %244 = phi i32 [ %248, %for.cond397.backedge.i ], [ %243, %for.end390.i ]
  %j.7843.i = phi i32 [ %j.7.i, %for.cond397.backedge.i ], [ %j.7841.i, %for.end390.i ]
  %idxprom403.i = sext i32 %j.7843.i to i64
  %arrayidx404.i = getelementptr inbounds i32, i32* %0, i64 %idxprom403.i
  %245 = load i32, i32* %arrayidx404.i, align 4
  %sub405.i = add i32 %245, -1
  %cmp406.i = icmp slt i32 %sub405.i, 0
  %add409.i = select i1 %cmp406.i, i32 %3, i32 0
  %add409.sub405.i = add nsw i32 %add409.i, %sub405.i
  %idxprom411.i = sext i32 %add409.sub405.i to i64
  %arrayidx412.i = getelementptr inbounds i8, i8* %1, i64 %idxprom411.i
  %246 = load i8, i8* %arrayidx412.i, align 1
  %idxprom413.i = zext i8 %246 to i64
  %arrayidx414.i = getelementptr inbounds [256 x i8], [256 x i8]* %bigDone.i, i64 0, i64 %idxprom413.i
  %247 = load i8, i8* %arrayidx414.i, align 1
  %tobool415.i = icmp eq i8 %247, 0
  br i1 %tobool415.i, label %if.then416.i, label %for.cond397.backedge.i

for.cond397.backedge.i:                           ; preds = %if.then416.i, %for.body402.i
  %248 = phi i32 [ %244, %for.body402.i ], [ %.pre952.i, %if.then416.i ]
  %j.7.i = add i32 %j.7843.i, -1
  %cmp400.i = icmp sgt i32 %j.7.i, %248
  br i1 %cmp400.i, label %for.body402.i, label %for.end425.i

if.then416.i:                                     ; preds = %for.body402.i
  %arrayidx418.i = getelementptr inbounds [256 x i32], [256 x i32]* %copyEnd.i, i64 0, i64 %idxprom413.i
  %249 = load i32, i32* %arrayidx418.i, align 4
  %dec419.i = add nsw i32 %249, -1
  store i32 %dec419.i, i32* %arrayidx418.i, align 4
  %idxprom420.i = sext i32 %249 to i64
  %arrayidx421.i = getelementptr inbounds i32, i32* %0, i64 %idxprom420.i
  store i32 %add409.sub405.i, i32* %arrayidx421.i, align 4
  %.pre952.i = load i32, i32* %arrayidx399.i, align 4
  br label %for.cond397.backedge.i

for.end425.i:                                     ; preds = %for.cond397.backedge.i, %for.end390.i
  %.lcssa834.i = phi i32 [ %243, %for.end390.i ], [ %248, %for.cond397.backedge.i ]
  %sub428.i = add nsw i32 %241, -1
  %cmp431.i = icmp eq i32 %sub428.i, %.lcssa834.i
  br i1 %cmp431.i, label %for.body447.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %for.end425.i
  %cmp435.i = icmp eq i32 %241, 0
  %cmp440.i = icmp eq i32 %.lcssa834.i, %sub.i
  %or.cond.i = and i1 %cmp435.i, %cmp440.i
  br i1 %or.cond.i, label %for.body447.i, label %if.then442.i

if.then442.i:                                     ; preds = %lor.lhs.false.i
  tail call void @BZ2_bz__AssertH__fail(i32 1007) #5
  br label %for.body447.i

for.body447.i:                                    ; preds = %if.then442.i, %lor.lhs.false.i, %for.end425.i, %for.body447.i
  %indvars.iv909.i = phi i64 [ %indvars.iv.next910.i, %for.body447.i ], [ 0, %for.end425.i ], [ 0, %lor.lhs.false.i ], [ 0, %if.then442.i ]
  %250 = shl i64 %indvars.iv909.i, 8
  %251 = add nsw i64 %250, %idxprom330.i
  %arrayidx451.i = getelementptr inbounds i32, i32* %2, i64 %251
  %252 = load i32, i32* %arrayidx451.i, align 4
  %or452.i = or i32 %252, 2097152
  store i32 %or452.i, i32* %arrayidx451.i, align 4
  %indvars.iv.next910.i = add nuw nsw i64 %indvars.iv909.i, 1
  %exitcond913.i = icmp eq i64 %indvars.iv.next910.i, 256
  br i1 %exitcond913.i, label %for.end455.i, label %for.body447.i

for.end455.i:                                     ; preds = %for.body447.i
  store i8 1, i8* %arrayidx331.i, align 1
  %cmp458.i = icmp slt i64 %indvars.iv916.i, 255
  br i1 %cmp458.i, label %if.then460.i, label %for.inc507.i

if.then460.i:                                     ; preds = %for.end455.i
  %253 = load i32, i32* %arrayidx360.i, align 4
  %and464.i = and i32 %253, -2097153
  %254 = load i32, i32* %arrayidx394.i, align 4
  %and469.i = and i32 %254, -2097153
  %sub470.i = sub i32 %and469.i, %and464.i
  br label %while.cond471.i

while.cond471.i:                                  ; preds = %while.cond471.i, %if.then460.i
  %shifts.0.i = phi i32 [ 0, %if.then460.i ], [ %inc476.i, %while.cond471.i ]
  %shr472.i = ashr i32 %sub470.i, %shifts.0.i
  %cmp473.i = icmp sgt i32 %shr472.i, 65534
  %inc476.i = add nuw nsw i32 %shifts.0.i, 1
  br i1 %cmp473.i, label %while.cond471.i, label %while.end477.i

while.end477.i:                                   ; preds = %while.cond471.i
  %sub478.i = add nsw i32 %sub470.i, -1
  %cmp480846.i = icmp sgt i32 %sub470.i, 0
  br i1 %cmp480846.i, label %for.body482.preheader.i, label %for.end499.i

for.body482.preheader.i:                          ; preds = %while.end477.i
  %255 = sext i32 %sub470.i to i64
  br label %for.body482.i

for.body482.i:                                    ; preds = %if.end496.i, %for.body482.preheader.i
  %indvars.iv914.in.i = phi i64 [ %255, %for.body482.preheader.i ], [ %indvars.iv914.i, %if.end496.i ]
  %j.9847.i = phi i32 [ %sub478.i, %for.body482.preheader.i ], [ %dec498.i, %if.end496.i ]
  %indvars.iv914.i = add nsw i64 %indvars.iv914.in.i, -1
  %add483.i = add nsw i32 %j.9847.i, %and464.i
  %idxprom484.i = sext i32 %add483.i to i64
  %arrayidx485.i = getelementptr inbounds i32, i32* %0, i64 %idxprom484.i
  %256 = load i32, i32* %arrayidx485.i, align 4
  %257 = trunc i64 %indvars.iv914.i to i32
  %shr486.i = ashr i32 %257, %shifts.0.i
  %conv487.i = trunc i32 %shr486.i to i16
  %idxprom488.i = sext i32 %256 to i64
  %arrayidx489.i = getelementptr inbounds i16, i16* %9, i64 %idxprom488.i
  store i16 %conv487.i, i16* %arrayidx489.i, align 2
  %cmp490.i = icmp slt i32 %256, 34
  br i1 %cmp490.i, label %if.then492.i, label %if.end496.i

if.then492.i:                                     ; preds = %for.body482.i
  %add493.i = add nsw i32 %256, %3
  %idxprom494.i = sext i32 %add493.i to i64
  %arrayidx495.i = getelementptr inbounds i16, i16* %9, i64 %idxprom494.i
  store i16 %conv487.i, i16* %arrayidx495.i, align 2
  br label %if.end496.i

if.end496.i:                                      ; preds = %if.then492.i, %for.body482.i
  %dec498.i = add nsw i32 %j.9847.i, -1
  %cmp480.i = icmp sgt i64 %indvars.iv914.in.i, 1
  br i1 %cmp480.i, label %for.body482.i, label %for.end499.i

for.end499.i:                                     ; preds = %if.end496.i, %while.end477.i
  %shr501.i = ashr i32 %sub478.i, %shifts.0.i
  %cmp502.i = icmp slt i32 %shr501.i, 65536
  br i1 %cmp502.i, label %for.inc507.i, label %if.then504.i

if.then504.i:                                     ; preds = %for.end499.i
  tail call void @BZ2_bz__AssertH__fail(i32 1002) #5
  br label %for.inc507.i

for.inc507.i:                                     ; preds = %if.then504.i, %for.end499.i, %for.end455.i
  %indvars.iv.next917.i = add nuw nsw i64 %indvars.iv916.i, 1
  %cmp278.i = icmp slt i64 %indvars.iv.next917.i, 256
  br i1 %cmp278.i, label %for.body280.i, label %for.end509.i

for.end509.i:                                     ; preds = %for.inc507.i
  br i1 %cmp.i, label %if.then512.i, label %mainSort.exit

if.then512.i:                                     ; preds = %for.end509.i
  %258 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %sub513.i = sub nsw i32 %3, %numQSorted.5.i
  %call514.i = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %258, i8* nonnull getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i32 %3, i32 %numQSorted.5.i, i32 %sub513.i) #6
  br label %mainSort.exit

mainSort.exit:                                    ; preds = %mainQSort3.exit.i, %for.end509.i, %if.then512.i
  %259 = phi i32 [ %.pr.i.i179, %for.end509.i ], [ %.pr.i.i179, %if.then512.i ], [ %.pr.i.i181, %mainQSort3.exit.i ]
  call void @llvm.lifetime.end(i64 1024, i8* %12) #5
  call void @llvm.lifetime.end(i64 1024, i8* %11) #5
  call void @llvm.lifetime.end(i64 256, i8* %bigDone945.i) #5
  call void @llvm.lifetime.end(i64 1024, i8* %10) #5
  %cmp12 = icmp sgt i32 %4, 2
  br i1 %cmp12, label %if.then13, label %if.end21

if.then13:                                        ; preds = %mainSort.exit
  %260 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %sub14 = sub nsw i32 %mul, %259
  %conv = sitofp i32 %sub14 to float
  %cmp16 = icmp eq i32 %3, 0
  %261 = sitofp i32 %3 to float
  %conv18 = select i1 %cmp16, float 1.000000e+00, float %261
  %div19 = fdiv float %conv, %conv18
  %conv20 = fpext float %div19 to double
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %260, i8* nonnull getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), i32 %sub14, i32 %3, double %conv20) #7
  br label %if.end21

if.end21:                                         ; preds = %if.then13, %mainSort.exit
  %cmp22 = icmp slt i32 %259, 0
  br i1 %cmp22, label %if.then24, label %if.end33

if.then24:                                        ; preds = %if.end21
  %cmp25 = icmp sgt i32 %4, 1
  br i1 %cmp25, label %if.then27, label %if.end29

if.then27:                                        ; preds = %if.then24
  %262 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %263 = tail call i64 @fwrite(i8* nonnull getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i64 53, i64 1, %struct._IO_FILE* %262) #7
  br label %if.end29

if.end29:                                         ; preds = %if.then27, %if.then24
  %arr130 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 4
  %264 = load i32*, i32** %arr130, align 8
  %arr231 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 5
  %265 = load i32*, i32** %arr231, align 8
  tail call fastcc void @fallbackSort(i32* %264, i32* %265, i32* %2, i32 %3, i32 %4)
  br label %if.end33

if.end33:                                         ; preds = %if.end21, %if.end29, %if.then
  %origPtr = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 7
  store i32 -1, i32* %origPtr, align 8
  %266 = load i32, i32* %nblock4, align 4
  %cmp35130 = icmp sgt i32 %266, 0
  br i1 %cmp35130, label %for.body.preheader, label %if.then48

for.body.preheader:                               ; preds = %if.end33
  %267 = sext i32 %266 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body.preheader ]
  %arrayidx38 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv
  %268 = load i32, i32* %arrayidx38, align 4
  %cmp39 = icmp eq i32 %268, 0
  br i1 %cmp39, label %for.end, label %for.inc

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp35 = icmp slt i64 %indvars.iv.next, %267
  br i1 %cmp35, label %for.body, label %if.then48

for.end:                                          ; preds = %for.body
  %269 = trunc i64 %indvars.iv to i32
  store i32 %269, i32* %origPtr, align 8
  %phitmp = icmp eq i32 %269, -1
  br i1 %phitmp, label %if.then48, label %if.end49

if.then48:                                        ; preds = %for.inc, %if.end33, %for.end
  tail call void @BZ2_bz__AssertH__fail(i32 1003) #5
  br label %if.end49

if.end49:                                         ; preds = %for.end, %if.then48
  call void @llvm.lifetime.end(i64 4, i8* %6) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @fallbackSort(i32* %fmap, i32* nocapture %eclass, i32* nocapture %bhtab, i32 %nblock, i32 %verb) unnamed_addr #0 {
entry:
  %bhtab576 = bitcast i32* %bhtab to i8*
  %stackLo.i = alloca [100 x i32], align 16
  %stackHi.i = alloca [100 x i32], align 16
  %ftab = alloca [257 x i32], align 16
  %0 = bitcast [257 x i32]* %ftab to i8*
  %ftabCopy = alloca [256 x i32], align 16
  %1 = bitcast [256 x i32]* %ftabCopy to i8*
  call void @llvm.lifetime.start(i64 1028, i8* %0) #5
  call void @llvm.lifetime.start(i64 1024, i8* %1) #5
  %2 = bitcast i32* %eclass to i8*
  %cmp = icmp sgt i32 %verb, 3
  br i1 %cmp, label %if.then, label %for.body.preheader

for.body.preheader:                               ; preds = %if.then, %entry
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 1028, i32 16, i1 false)
  %cmp3494 = icmp sgt i32 %nblock, 0
  br i1 %cmp3494, label %for.body4, label %for.body15.preheader

if.then:                                          ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %4 = tail call i64 @fwrite(i8* nonnull getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i64 0, i64 0), i64 27, i64 1, %struct._IO_FILE* %3) #7
  br label %for.body.preheader

for.body4:                                        ; preds = %for.body.preheader, %for.body4
  %indvars.iv565 = phi i64 [ %indvars.iv.next566, %for.body4 ], [ 0, %for.body.preheader ]
  %arrayidx6 = getelementptr inbounds i8, i8* %2, i64 %indvars.iv565
  %5 = load i8, i8* %arrayidx6, align 1
  %idxprom7 = zext i8 %5 to i64
  %arrayidx8 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %idxprom7
  %6 = load i32, i32* %arrayidx8, align 4
  %inc9 = add nsw i32 %6, 1
  store i32 %inc9, i32* %arrayidx8, align 4
  %indvars.iv.next566 = add nuw nsw i64 %indvars.iv565, 1
  %lftr.wideiv567 = trunc i64 %indvars.iv.next566 to i32
  %exitcond568 = icmp eq i32 %lftr.wideiv567, %nblock
  br i1 %exitcond568, label %for.body15.preheader.loopexit, label %for.body4

for.body15.preheader.loopexit:                    ; preds = %for.body4
  %arrayidx27.phi.trans.insert.phi.trans.insert = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 0
  %.pre.pre = load i32, i32* %arrayidx27.phi.trans.insert.phi.trans.insert, align 16
  br label %for.body15.preheader

for.body15.preheader:                             ; preds = %for.body.preheader, %for.body15.preheader.loopexit
  %.pre = phi i32 [ %.pre.pre, %for.body15.preheader.loopexit ], [ 0, %for.body.preheader ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* nonnull %0, i64 1024, i32 16, i1 false)
  br label %for.body25

for.cond33.preheader:                             ; preds = %for.body25
  br i1 %cmp3494, label %for.body35, label %for.end47

for.body25:                                       ; preds = %for.body25, %for.body15.preheader
  %7 = phi i32 [ %.pre, %for.body15.preheader ], [ %add, %for.body25 ]
  %indvars.iv558 = phi i64 [ 1, %for.body15.preheader ], [ %indvars.iv.next559, %for.body25 ]
  %arrayidx29 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %indvars.iv558
  %8 = load i32, i32* %arrayidx29, align 4
  %add = add nsw i32 %8, %7
  store i32 %add, i32* %arrayidx29, align 4
  %indvars.iv.next559 = add nuw nsw i64 %indvars.iv558, 1
  %exitcond561 = icmp eq i64 %indvars.iv.next559, 257
  br i1 %exitcond561, label %for.cond33.preheader, label %for.body25

for.body35:                                       ; preds = %for.cond33.preheader, %for.body35
  %indvars.iv554 = phi i64 [ %indvars.iv.next555, %for.body35 ], [ 0, %for.cond33.preheader ]
  %arrayidx37 = getelementptr inbounds i8, i8* %2, i64 %indvars.iv554
  %9 = load i8, i8* %arrayidx37, align 1
  %idxprom38 = zext i8 %9 to i64
  %arrayidx39 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %idxprom38
  %10 = load i32, i32* %arrayidx39, align 4
  %sub40 = add nsw i32 %10, -1
  store i32 %sub40, i32* %arrayidx39, align 4
  %idxprom43 = sext i32 %sub40 to i64
  %arrayidx44 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom43
  %11 = trunc i64 %indvars.iv554 to i32
  store i32 %11, i32* %arrayidx44, align 4
  %indvars.iv.next555 = add nuw nsw i64 %indvars.iv554, 1
  %lftr.wideiv556 = trunc i64 %indvars.iv.next555 to i32
  %exitcond557 = icmp eq i32 %lftr.wideiv556, %nblock
  br i1 %exitcond557, label %for.end47, label %for.body35

for.end47:                                        ; preds = %for.body35, %for.cond33.preheader
  %cmp50488 = icmp sgt i32 %nblock, -64
  br i1 %cmp50488, label %for.body52.preheader, label %for.body61

for.body52.preheader:                             ; preds = %for.end47
  %div = sdiv i32 %nblock, 32
  %12 = add nsw i32 %div, 1
  %13 = icmp sgt i32 %12, 0
  %smax = select i1 %13, i32 %12, i32 0
  %14 = zext i32 %smax to i64
  %15 = shl nuw nsw i64 %14, 2
  %16 = add nuw nsw i64 %15, 4
  call void @llvm.memset.p0i8.i64(i8* %bhtab576, i8 0, i64 %16, i32 4, i1 false)
  br label %for.body61

for.body61:                                       ; preds = %for.end47, %for.body52.preheader, %for.body61
  %indvars.iv549 = phi i64 [ %indvars.iv.next550, %for.body61 ], [ 0, %for.body52.preheader ], [ 0, %for.end47 ]
  %arrayidx63 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %indvars.iv549
  %17 = load i32, i32* %arrayidx63, align 4
  %and = and i32 %17, 31
  %shl = shl i32 1, %and
  %shr = ashr i32 %17, 5
  %idxprom66 = sext i32 %shr to i64
  %arrayidx67 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom66
  %18 = load i32, i32* %arrayidx67, align 4
  %or = or i32 %shl, %18
  store i32 %or, i32* %arrayidx67, align 4
  %indvars.iv.next550 = add nuw nsw i64 %indvars.iv549, 1
  %exitcond551 = icmp eq i64 %indvars.iv.next550, 256
  br i1 %exitcond551, label %for.body74, label %for.body61

while.body.preheader:                             ; preds = %for.body74
  %19 = bitcast [100 x i32]* %stackLo.i to i8*
  %20 = bitcast [100 x i32]* %stackHi.i to i8*
  %arrayidx.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo.i, i64 0, i64 0
  %arrayidx2.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi.i, i64 0, i64 0
  br label %while.body

for.body74:                                       ; preds = %for.body61, %for.body74
  %i.7486 = phi i32 [ %inc97, %for.body74 ], [ 0, %for.body61 ]
  %mul = shl nsw i32 %i.7486, 1
  %add75 = add nsw i32 %mul, %nblock
  %and76 = and i32 %add75, 31
  %shl77 = shl i32 1, %and76
  %shr80 = ashr i32 %add75, 5
  %idxprom81 = sext i32 %shr80 to i64
  %arrayidx82 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom81
  %21 = load i32, i32* %arrayidx82, align 4
  %or83 = or i32 %21, %shl77
  store i32 %or83, i32* %arrayidx82, align 4
  %add86 = add nsw i32 %add75, 1
  %and87 = and i32 %add86, 31
  %shl88 = shl i32 1, %and87
  %neg = xor i32 %shl88, -1
  %shr92 = ashr i32 %add86, 5
  %idxprom93 = sext i32 %shr92 to i64
  %arrayidx94 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom93
  %22 = load i32, i32* %arrayidx94, align 4
  %and95 = and i32 %22, %neg
  store i32 %and95, i32* %arrayidx94, align 4
  %inc97 = add nuw nsw i32 %i.7486, 1
  %exitcond548 = icmp eq i32 %inc97, 32
  br i1 %exitcond548, label %while.body.preheader, label %for.body74

while.body:                                       ; preds = %while.body.preheader, %if.end260
  %H.0 = phi i32 [ %mul261, %if.end260 ], [ 1, %while.body.preheader ]
  br i1 %cmp, label %if.then101, label %for.cond104.preheader

if.then101:                                       ; preds = %while.body
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call102 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* nonnull getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 %H.0) #7
  br label %for.cond104.preheader

for.cond104.preheader:                            ; preds = %if.then101, %while.body
  br i1 %cmp3494, label %for.body107, label %while.body130.outer

for.body107:                                      ; preds = %for.cond104.preheader, %for.body107
  %indvars.iv538 = phi i64 [ %indvars.iv.next539, %for.body107 ], [ 0, %for.cond104.preheader ]
  %j.0481 = phi i32 [ %j.0.i.8, %for.body107 ], [ 0, %for.cond104.preheader ]
  %24 = trunc i64 %indvars.iv538 to i32
  %shr108 = ashr i32 %24, 5
  %idxprom109 = sext i32 %shr108 to i64
  %arrayidx110 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom109
  %25 = load i32, i32* %arrayidx110, align 4
  %and111 = and i32 %24, 31
  %shl112 = shl i32 1, %and111
  %and113 = and i32 %25, %shl112
  %tobool = icmp eq i32 %and113, 0
  %j.0.i.8 = select i1 %tobool, i32 %j.0481, i32 %24
  %arrayidx117 = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv538
  %26 = load i32, i32* %arrayidx117, align 4
  %sub118 = sub i32 %26, %H.0
  %cmp119 = icmp slt i32 %sub118, 0
  %add122 = select i1 %cmp119, i32 %nblock, i32 0
  %k.0 = add nsw i32 %add122, %sub118
  %idxprom124 = sext i32 %k.0 to i64
  %arrayidx125 = getelementptr inbounds i32, i32* %eclass, i64 %idxprom124
  store i32 %j.0.i.8, i32* %arrayidx125, align 4
  %indvars.iv.next539 = add nuw nsw i64 %indvars.iv538, 1
  %lftr.wideiv540 = trunc i64 %indvars.iv.next539 to i32
  %exitcond541 = icmp eq i32 %lftr.wideiv540, %nblock
  br i1 %exitcond541, label %while.body130.outer, label %for.body107

while.body130.outer:                              ; preds = %fallbackQSort3.exit, %for.inc251, %for.cond104.preheader, %for.body107
  %r.0.ph = phi i32 [ -1, %for.body107 ], [ -1, %for.cond104.preheader ], [ %sub222, %for.inc251 ], [ %sub222, %fallbackQSort3.exit ]
  %nNotDone.0.ph = phi i32 [ 0, %for.body107 ], [ 0, %for.cond104.preheader ], [ %add232, %for.inc251 ], [ %add232, %fallbackQSort3.exit ]
  br label %while.cond132

while.cond132:                                    ; preds = %if.end226, %while.cond132, %while.body130.outer
  %k.1.in = phi i32 [ %r.0.ph, %while.body130.outer ], [ %k.1, %while.cond132 ], [ %sub222, %if.end226 ]
  %k.1 = add nsw i32 %k.1.in, 1
  %shr133 = ashr i32 %k.1, 5
  %idxprom134 = sext i32 %shr133 to i64
  %arrayidx135 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom134
  %27 = load i32, i32* %arrayidx135, align 4
  %and136 = and i32 %k.1, 31
  %shl137 = shl i32 1, %and136
  %and138 = and i32 %shl137, %27
  %tobool139 = icmp eq i32 %and138, 0
  %tobool141 = icmp ne i32 %and136, 0
  %not.tobool139 = xor i1 %tobool139, true
  %.tobool141 = and i1 %tobool141, %not.tobool139
  br i1 %.tobool141, label %while.cond132, label %while.end

while.end:                                        ; preds = %while.cond132
  br i1 %tobool139, label %if.end172, label %while.cond152

while.cond152:                                    ; preds = %while.end, %while.cond152
  %k.2 = phi i32 [ %add159, %while.cond152 ], [ %k.1, %while.end ]
  %shr153 = ashr i32 %k.2, 5
  %idxprom154 = sext i32 %shr153 to i64
  %arrayidx155 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom154
  %28 = load i32, i32* %arrayidx155, align 4
  %cmp156 = icmp eq i32 %28, -1
  %add159 = add nsw i32 %k.2, 32
  br i1 %cmp156, label %while.cond152, label %while.cond161

while.cond161:                                    ; preds = %while.cond152, %while.cond161
  %k.3 = phi i32 [ %inc170, %while.cond161 ], [ %k.2, %while.cond152 ]
  %shr162 = ashr i32 %k.3, 5
  %idxprom163 = sext i32 %shr162 to i64
  %arrayidx164 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom163
  %29 = load i32, i32* %arrayidx164, align 4
  %and165 = and i32 %k.3, 31
  %shl166 = shl i32 1, %and165
  %and167 = and i32 %shl166, %29
  %tobool168 = icmp eq i32 %and167, 0
  %inc170 = add nsw i32 %k.3, 1
  br i1 %tobool168, label %if.end172, label %while.cond161

if.end172:                                        ; preds = %while.cond161, %while.end
  %k.4 = phi i32 [ %k.1, %while.end ], [ %k.3, %while.cond161 ]
  %cmp174 = icmp sgt i32 %k.4, %nblock
  br i1 %cmp174, label %while.end255, label %while.cond178

while.cond178:                                    ; preds = %if.end172, %while.cond178
  %k.5 = phi i32 [ %inc191, %while.cond178 ], [ %k.4, %if.end172 ]
  %shr179 = ashr i32 %k.5, 5
  %idxprom180 = sext i32 %shr179 to i64
  %arrayidx181 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom180
  %30 = load i32, i32* %arrayidx181, align 4
  %and182 = and i32 %k.5, 31
  %shl183 = shl i32 1, %and182
  %and184 = and i32 %shl183, %30
  %tobool185 = icmp eq i32 %and184, 0
  %tobool188 = icmp ne i32 %and182, 0
  %tobool188. = and i1 %tobool188, %tobool185
  %inc191 = add nsw i32 %k.5, 1
  br i1 %tobool188., label %while.cond178, label %while.end192

while.end192:                                     ; preds = %while.cond178
  br i1 %tobool185, label %while.cond201, label %if.end221

while.cond201:                                    ; preds = %while.end192, %while.cond201
  %k.6 = phi i32 [ %add208, %while.cond201 ], [ %k.5, %while.end192 ]
  %shr202 = ashr i32 %k.6, 5
  %idxprom203 = sext i32 %shr202 to i64
  %arrayidx204 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom203
  %31 = load i32, i32* %arrayidx204, align 4
  %cmp205 = icmp eq i32 %31, 0
  %add208 = add nsw i32 %k.6, 32
  br i1 %cmp205, label %while.cond201, label %while.cond210

while.cond210:                                    ; preds = %while.cond201, %while.cond210
  %k.7 = phi i32 [ %inc219, %while.cond210 ], [ %k.6, %while.cond201 ]
  %shr211 = ashr i32 %k.7, 5
  %idxprom212 = sext i32 %shr211 to i64
  %arrayidx213 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom212
  %32 = load i32, i32* %arrayidx213, align 4
  %and214 = and i32 %k.7, 31
  %shl215 = shl i32 1, %and214
  %and216 = and i32 %shl215, %32
  %lnot = icmp eq i32 %and216, 0
  %inc219 = add nsw i32 %k.7, 1
  br i1 %lnot, label %while.cond210, label %if.end221

if.end221:                                        ; preds = %while.cond210, %while.end192
  %k.8 = phi i32 [ %k.5, %while.end192 ], [ %k.7, %while.cond210 ]
  %sub222 = add nsw i32 %k.8, -1
  %cmp223 = icmp sgt i32 %k.8, %nblock
  br i1 %cmp223, label %while.end255, label %if.end226

if.end226:                                        ; preds = %if.end221
  %cmp227 = icmp sgt i32 %k.8, %k.4
  br i1 %cmp227, label %if.then229, label %while.cond132

if.then229:                                       ; preds = %if.end226
  %sub173.le = add i32 %k.4, -1
  %sub173.neg = sub i32 1, %k.4
  %sub230 = add i32 %nNotDone.0.ph, 1
  %add231 = add i32 %sub230, %sub173.neg
  %add232 = add i32 %add231, %sub222
  call void @llvm.lifetime.start(i64 400, i8* %19) #5
  call void @llvm.lifetime.start(i64 400, i8* %20) #5
  store i32 %sub173.le, i32* %arrayidx.i, align 16
  store i32 %sub222, i32* %arrayidx2.i, align 16
  br label %while.body.lr.ph.i

while.body.lr.ph.i:                               ; preds = %while.cond.outer.backedge.i, %if.then229
  %r.0.ph415.i = phi i32 [ 0, %if.then229 ], [ %rem.i, %while.cond.outer.backedge.i ]
  %sp.0.ph414.i = phi i32 [ 1, %if.then229 ], [ %sp.0.ph.be.i, %while.cond.outer.backedge.i ]
  %33 = sext i32 %sp.0.ph414.i to i64
  br label %while.body.i

while.body.i:                                     ; preds = %while.cond.backedge.i, %while.body.lr.ph.i
  %indvars.iv542 = phi i64 [ %indvars.iv.next543, %while.cond.backedge.i ], [ %33, %while.body.lr.ph.i ]
  %sp.0371.i = phi i32 [ %dec.i, %while.cond.backedge.i ], [ %sp.0.ph414.i, %while.body.lr.ph.i ]
  %cmp3.i = icmp slt i64 %indvars.iv542, 100
  br i1 %cmp3.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %while.body.i
  tail call void @BZ2_bz__AssertH__fail(i32 1004) #5
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %while.body.i
  %dec.i = add nsw i32 %sp.0371.i, -1
  %idxprom4.i = sext i32 %dec.i to i64
  %arrayidx5.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo.i, i64 0, i64 %idxprom4.i
  %34 = load i32, i32* %arrayidx5.i, align 4
  %arrayidx7.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi.i, i64 0, i64 %idxprom4.i
  %35 = load i32, i32* %arrayidx7.i, align 4
  %sub.i = sub nsw i32 %35, %34
  %cmp8.i = icmp slt i32 %sub.i, 10
  br i1 %cmp8.i, label %if.then9.i, label %if.end10.i

if.then9.i:                                       ; preds = %if.end.i
  %cmp.i.i = icmp eq i32 %35, %34
  br i1 %cmp.i.i, label %while.cond.backedge.i, label %if.end.i.i

while.cond.backedge.i:                            ; preds = %for.end53.i.i, %for.cond29.preheader.i.i, %if.then9.i
  %cmp.i = icmp sgt i64 %indvars.iv542, 1
  %indvars.iv.next543 = add nsw i64 %indvars.iv542, -1
  br i1 %cmp.i, label %while.body.i, label %fallbackQSort3.exit

if.end.i.i:                                       ; preds = %if.then9.i
  %cmp2.i.i = icmp sgt i32 %sub.i, 3
  br i1 %cmp2.i.i, label %if.then3.i.i, label %for.cond29.preheader.i.i

for.cond29.preheader.i.i:                         ; preds = %for.end.i.i, %if.then3.i.i, %if.end.i.i
  %cmp30113.i.i = icmp sgt i32 %35, %34
  br i1 %cmp30113.i.i, label %for.body31.preheader.i.i, label %while.cond.backedge.i

for.body31.preheader.i.i:                         ; preds = %for.cond29.preheader.i.i
  %36 = sext i32 %35 to i64
  %37 = sext i32 %34 to i64
  br label %for.body31.i.i

if.then3.i.i:                                     ; preds = %if.end.i.i
  %sub4.i.i = add i32 %35, -4
  %cmp5122.i.i = icmp slt i32 %sub4.i.i, %34
  br i1 %cmp5122.i.i, label %for.cond29.preheader.i.i, label %for.body.preheader.i.i

for.body.preheader.i.i:                           ; preds = %if.then3.i.i
  %38 = sext i32 %sub4.i.i to i64
  %39 = sext i32 %35 to i64
  %40 = sext i32 %34 to i64
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.end.i.i, %for.body.preheader.i.i
  %indvars.iv131.i.i = phi i64 [ %38, %for.body.preheader.i.i ], [ %indvars.iv.next132.i.i, %for.end.i.i ]
  %indvars.iv.i.i = phi i32 [ %35, %for.body.preheader.i.i ], [ %indvars.iv.next.i.i, %for.end.i.i ]
  %arrayidx.i.i = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv131.i.i
  %41 = load i32, i32* %arrayidx.i.i, align 4
  %idxprom6.i.i = sext i32 %41 to i64
  %arrayidx7.i.i = getelementptr inbounds i32, i32* %eclass, i64 %idxprom6.i.i
  %42 = load i32, i32* %arrayidx7.i.i, align 4
  %43 = add nsw i64 %indvars.iv131.i.i, 4
  %cmp9117.i.i = icmp sgt i64 %43, %39
  %44 = trunc i64 %indvars.iv131.i.i to i32
  br i1 %cmp9117.i.i, label %for.end.i.i, label %land.rhs.preheader.i.i

land.rhs.preheader.i.i:                           ; preds = %for.body.i.i
  %45 = sext i32 %indvars.iv.i.i to i64
  %46 = trunc i64 %43 to i32
  br label %land.rhs.i.i

land.rhs.i.i:                                     ; preds = %for.body15.i.i, %land.rhs.preheader.i.i
  %indvars.iv129.i.i = phi i64 [ %45, %land.rhs.preheader.i.i ], [ %indvars.iv.next130.i.i, %for.body15.i.i ]
  %j.0119.i.i = phi i32 [ %46, %land.rhs.preheader.i.i ], [ %j.0.i.i, %for.body15.i.i ]
  %j.0.in118.i.i = phi i32 [ %44, %land.rhs.preheader.i.i ], [ %49, %for.body15.i.i ]
  %arrayidx11.i.i = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv129.i.i
  %47 = load i32, i32* %arrayidx11.i.i, align 4
  %idxprom12.i.i = zext i32 %47 to i64
  %arrayidx13.i.i = getelementptr inbounds i32, i32* %eclass, i64 %idxprom12.i.i
  %48 = load i32, i32* %arrayidx13.i.i, align 4
  %cmp14.i.i = icmp ugt i32 %42, %48
  br i1 %cmp14.i.i, label %for.body15.i.i, label %for.end.i.i

for.body15.i.i:                                   ; preds = %land.rhs.i.i
  %idxprom19.i.i = sext i32 %j.0.in118.i.i to i64
  %arrayidx20.i.i = getelementptr inbounds i32, i32* %fmap, i64 %idxprom19.i.i
  store i32 %47, i32* %arrayidx20.i.i, align 4
  %j.0.i.i = add nsw i32 %j.0119.i.i, 4
  %cmp9.i.i = icmp sgt i32 %j.0.i.i, %35
  %indvars.iv.next130.i.i = add i64 %indvars.iv129.i.i, 4
  %49 = trunc i64 %indvars.iv129.i.i to i32
  br i1 %cmp9.i.i, label %for.end.i.i, label %land.rhs.i.i

for.end.i.i:                                      ; preds = %for.body15.i.i, %land.rhs.i.i, %for.body.i.i
  %j.0.in.lcssa.i.i = phi i32 [ %44, %for.body.i.i ], [ %j.0.in118.i.i, %land.rhs.i.i ], [ %49, %for.body15.i.i ]
  %idxprom23.i.i = sext i32 %j.0.in.lcssa.i.i to i64
  %arrayidx24.i.i = getelementptr inbounds i32, i32* %fmap, i64 %idxprom23.i.i
  store i32 %41, i32* %arrayidx24.i.i, align 4
  %cmp5.i.i = icmp sgt i64 %indvars.iv131.i.i, %40
  %indvars.iv.next.i.i = add i32 %indvars.iv.i.i, -1
  %indvars.iv.next132.i.i = add nsw i64 %indvars.iv131.i.i, -1
  br i1 %cmp5.i.i, label %for.body.i.i, label %for.cond29.preheader.i.i

for.body31.i.i:                                   ; preds = %for.end53.i.i, %for.body31.preheader.i.i
  %indvars.iv127.i.i = phi i64 [ %36, %for.body31.preheader.i.i ], [ %indvars.iv.next128.i.i, %for.end53.i.i ]
  %i.1115.in.i.i = phi i32 [ %35, %for.body31.preheader.i.i ], [ %i.1115.i.i, %for.end53.i.i ]
  %indvars.iv.next128.i.i = add nsw i64 %indvars.iv127.i.i, -1
  %i.1115.i.i = add nsw i32 %i.1115.in.i.i, -1
  %arrayidx33.i.i = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv.next128.i.i
  %50 = load i32, i32* %arrayidx33.i.i, align 4
  %idxprom34.i.i = sext i32 %50 to i64
  %arrayidx35.i.i = getelementptr inbounds i32, i32* %eclass, i64 %idxprom34.i.i
  %51 = load i32, i32* %arrayidx35.i.i, align 4
  %cmp38109.i.i = icmp sgt i32 %i.1115.in.i.i, %35
  br i1 %cmp38109.i.i, label %for.end53.i.i, label %land.rhs39.i.i

land.rhs39.i.i:                                   ; preds = %for.body31.i.i, %for.body46.i.i
  %indvars.iv124.i.i = phi i64 [ %indvars.iv.next125.i.i, %for.body46.i.i ], [ %indvars.iv127.i.i, %for.body31.i.i ]
  %j.1110.i.i = phi i32 [ %inc.i.i, %for.body46.i.i ], [ %i.1115.in.i.i, %for.body31.i.i ]
  %arrayidx41.i.i = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv124.i.i
  %52 = load i32, i32* %arrayidx41.i.i, align 4
  %idxprom42.i.i = zext i32 %52 to i64
  %arrayidx43.i.i = getelementptr inbounds i32, i32* %eclass, i64 %idxprom42.i.i
  %53 = load i32, i32* %arrayidx43.i.i, align 4
  %cmp44.i.i = icmp ugt i32 %51, %53
  %54 = trunc i64 %indvars.iv124.i.i to i32
  br i1 %cmp44.i.i, label %for.body46.i.i, label %for.end53.i.i

for.body46.i.i:                                   ; preds = %land.rhs39.i.i
  %55 = add nsw i64 %indvars.iv124.i.i, -1
  %arrayidx51.i.i = getelementptr inbounds i32, i32* %fmap, i64 %55
  store i32 %52, i32* %arrayidx51.i.i, align 4
  %inc.i.i = add nsw i32 %j.1110.i.i, 1
  %cmp38.i.i = icmp slt i64 %indvars.iv124.i.i, %36
  %indvars.iv.next125.i.i = add nsw i64 %indvars.iv124.i.i, 1
  br i1 %cmp38.i.i, label %land.rhs39.i.i, label %for.end53.i.i

for.end53.i.i:                                    ; preds = %for.body46.i.i, %land.rhs39.i.i, %for.body31.i.i
  %j.1.lcssa.i.i = phi i32 [ %i.1115.in.i.i, %for.body31.i.i ], [ %54, %land.rhs39.i.i ], [ %inc.i.i, %for.body46.i.i ]
  %sub54.i.i = add nsw i32 %j.1.lcssa.i.i, -1
  %idxprom55.i.i = sext i32 %sub54.i.i to i64
  %arrayidx56.i.i = getelementptr inbounds i32, i32* %fmap, i64 %idxprom55.i.i
  store i32 %50, i32* %arrayidx56.i.i, align 4
  %cmp30.i.i = icmp sgt i64 %indvars.iv.next128.i.i, %37
  br i1 %cmp30.i.i, label %for.body31.i.i, label %while.cond.backedge.i

if.end10.i:                                       ; preds = %if.end.i
  %56 = trunc i64 %indvars.iv542 to i32
  %mul.i = mul nuw nsw i32 %r.0.ph415.i, 7621
  %add.i = add nuw nsw i32 %mul.i, 1
  %rem.i = and i32 %add.i, 32767
  %rem11.i = urem i32 %rem.i, 3
  switch i32 %rem11.i, label %if.else25.i [
    i32 0, label %if.then13.i
    i32 1, label %if.then19.i
  ]

if.then13.i:                                      ; preds = %if.end10.i
  %idxprom14.i = sext i32 %34 to i64
  %arrayidx15.i = getelementptr inbounds i32, i32* %fmap, i64 %idxprom14.i
  %57 = load i32, i32* %arrayidx15.i, align 4
  %idxprom16.i = zext i32 %57 to i64
  %arrayidx17.i = getelementptr inbounds i32, i32* %eclass, i64 %idxprom16.i
  br label %if.end31.i

if.then19.i:                                      ; preds = %if.end10.i
  %add20.i = add nsw i32 %35, %34
  %shr.i = ashr i32 %add20.i, 1
  %idxprom21.i = sext i32 %shr.i to i64
  %arrayidx22.i = getelementptr inbounds i32, i32* %fmap, i64 %idxprom21.i
  %58 = load i32, i32* %arrayidx22.i, align 4
  %idxprom23.i = zext i32 %58 to i64
  %arrayidx24.i = getelementptr inbounds i32, i32* %eclass, i64 %idxprom23.i
  br label %if.end31.i

if.else25.i:                                      ; preds = %if.end10.i
  %idxprom26.i = sext i32 %35 to i64
  %arrayidx27.i = getelementptr inbounds i32, i32* %fmap, i64 %idxprom26.i
  %59 = load i32, i32* %arrayidx27.i, align 4
  %idxprom28.i = zext i32 %59 to i64
  %arrayidx29.i = getelementptr inbounds i32, i32* %eclass, i64 %idxprom28.i
  br label %if.end31.i

if.end31.i:                                       ; preds = %if.else25.i, %if.then19.i, %if.then13.i
  %med.0.in.i = phi i32* [ %arrayidx17.i, %if.then13.i ], [ %arrayidx24.i, %if.then19.i ], [ %arrayidx29.i, %if.else25.i ]
  %med.0.i = load i32, i32* %med.0.in.i, align 4
  br label %while.body35.outer.i

while.body35.outer.i:                             ; preds = %if.end92.i, %if.end31.i
  %gtHi.0.ph.i = phi i32 [ %76, %if.end92.i ], [ %35, %if.end31.i ]
  %ltLo.0.ph.i = phi i32 [ %ltLo.0.ph357.lcssa.i, %if.end92.i ], [ %34, %if.end31.i ]
  %unHi.0.ph.i = phi i32 [ %dec103.i, %if.end92.i ], [ %35, %if.end31.i ]
  %unLo.0.ph.i = phi i32 [ %inc102.i, %if.end92.i ], [ %34, %if.end31.i ]
  %cmp36372379.i = icmp sgt i32 %unLo.0.ph.i, %unHi.0.ph.i
  br i1 %cmp36372379.i, label %while.body62.preheader.i, label %if.end38.lr.ph.preheader.i

if.end38.lr.ph.preheader.i:                       ; preds = %while.body35.outer.i
  %60 = sext i32 %unHi.0.ph.i to i64
  %61 = sext i32 %ltLo.0.ph.i to i64
  br label %if.end38.lr.ph.i

if.end38.lr.ph.i:                                 ; preds = %if.then45.i, %if.end38.lr.ph.preheader.i
  %indvars.iv453.i = phi i64 [ %61, %if.end38.lr.ph.preheader.i ], [ %indvars.iv.next454.i, %if.then45.i ]
  %unLo.0.ph359381.i = phi i32 [ %unLo.0.ph.i, %if.end38.lr.ph.preheader.i ], [ %inc55.i, %if.then45.i ]
  %ltLo.0.ph357380.i = phi i32 [ %ltLo.0.ph.i, %if.end38.lr.ph.preheader.i ], [ %inc54.i, %if.then45.i ]
  %62 = sext i32 %unLo.0.ph359381.i to i64
  br label %if.end38.i

if.end38.i:                                       ; preds = %if.end59.i, %if.end38.lr.ph.i
  %indvars.iv451.i = phi i64 [ %indvars.iv.next452.i, %if.end59.i ], [ %62, %if.end38.lr.ph.i ]
  %unLo.0373.i = phi i32 [ %inc60.i, %if.end59.i ], [ %unLo.0.ph359381.i, %if.end38.lr.ph.i ]
  %arrayidx40.i = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv451.i
  %63 = load i32, i32* %arrayidx40.i, align 4
  %idxprom41.i = zext i32 %63 to i64
  %arrayidx42.i = getelementptr inbounds i32, i32* %eclass, i64 %idxprom41.i
  %64 = load i32, i32* %arrayidx42.i, align 4
  %cmp44.i = icmp eq i32 %64, %med.0.i
  br i1 %cmp44.i, label %if.then45.i, label %if.end56.i

if.then45.i:                                      ; preds = %if.end38.i
  %65 = trunc i64 %indvars.iv451.i to i32
  %arrayidx49.i = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv453.i
  %66 = load i32, i32* %arrayidx49.i, align 4
  store i32 %66, i32* %arrayidx40.i, align 4
  store i32 %63, i32* %arrayidx49.i, align 4
  %inc54.i = add nsw i32 %ltLo.0.ph357380.i, 1
  %inc55.i = add nsw i32 %65, 1
  %cmp36372.i = icmp slt i32 %65, %unHi.0.ph.i
  %indvars.iv.next454.i = add i64 %indvars.iv453.i, 1
  br i1 %cmp36372.i, label %if.end38.lr.ph.i, label %while.body62.preheader.i

if.end56.i:                                       ; preds = %if.end38.i
  %cmp57.i = icmp sgt i32 %64, %med.0.i
  %67 = trunc i64 %indvars.iv451.i to i32
  br i1 %cmp57.i, label %while.body62.preheader.loopexit.i, label %if.end59.i

while.body62.preheader.loopexit.i:                ; preds = %if.end59.i, %if.end56.i
  %unLo.0.lcssa.ph.i = phi i32 [ %inc60.i, %if.end59.i ], [ %67, %if.end56.i ]
  %68 = trunc i64 %indvars.iv453.i to i32
  br label %while.body62.preheader.i

while.body62.preheader.i:                         ; preds = %if.then45.i, %while.body62.preheader.loopexit.i, %while.body35.outer.i
  %ltLo.0.ph357.lcssa.i = phi i32 [ %ltLo.0.ph.i, %while.body35.outer.i ], [ %68, %while.body62.preheader.loopexit.i ], [ %inc54.i, %if.then45.i ]
  %unLo.0.lcssa.i = phi i32 [ %unLo.0.ph.i, %while.body35.outer.i ], [ %unLo.0.lcssa.ph.i, %while.body62.preheader.loopexit.i ], [ %inc55.i, %if.then45.i ]
  %cmp63384394.i = icmp sgt i32 %unLo.0.lcssa.i, %unHi.0.ph.i
  br i1 %cmp63384394.i, label %while.end104.i, label %if.end65.lr.ph.preheader.i

if.end65.lr.ph.preheader.i:                       ; preds = %while.body62.preheader.i
  %69 = sext i32 %unLo.0.lcssa.i to i64
  %70 = sext i32 %gtHi.0.ph.i to i64
  br label %if.end65.lr.ph.i

if.end59.i:                                       ; preds = %if.end56.i
  %inc60.i = add nsw i32 %unLo.0373.i, 1
  %cmp36.i = icmp slt i64 %indvars.iv451.i, %60
  %indvars.iv.next452.i = add nsw i64 %indvars.iv451.i, 1
  br i1 %cmp36.i, label %if.end38.i, label %while.body62.preheader.loopexit.i

if.end65.i:                                       ; preds = %if.end87.i, %if.end65.lr.ph.i
  %indvars.iv455.i = phi i64 [ %indvars.iv.next456.i, %if.end87.i ], [ %75, %if.end65.lr.ph.i ]
  %unHi.1385.i = phi i32 [ %dec88.i, %if.end87.i ], [ %unHi.1.ph396.i, %if.end65.lr.ph.i ]
  %arrayidx67.i = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv455.i
  %71 = load i32, i32* %arrayidx67.i, align 4
  %idxprom68.i = zext i32 %71 to i64
  %arrayidx69.i = getelementptr inbounds i32, i32* %eclass, i64 %idxprom68.i
  %72 = load i32, i32* %arrayidx69.i, align 4
  %cmp71.i = icmp eq i32 %72, %med.0.i
  br i1 %cmp71.i, label %if.then72.i, label %if.end84.i

if.then72.i:                                      ; preds = %if.end65.i
  %73 = trunc i64 %indvars.iv455.i to i32
  %arrayidx77.i = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv457.i
  %74 = load i32, i32* %arrayidx77.i, align 4
  store i32 %74, i32* %arrayidx67.i, align 4
  store i32 %71, i32* %arrayidx77.i, align 4
  %dec82.i = add nsw i32 %gtHi.1.ph395.i, -1
  %dec83.i = add nsw i32 %73, -1
  %cmp63384.i = icmp slt i32 %unLo.0.lcssa.i, %73
  %indvars.iv.next458.i = add i64 %indvars.iv457.i, -1
  br i1 %cmp63384.i, label %if.end65.lr.ph.i, label %while.end104.i

if.end65.lr.ph.i:                                 ; preds = %if.then72.i, %if.end65.lr.ph.preheader.i
  %indvars.iv457.i = phi i64 [ %70, %if.end65.lr.ph.preheader.i ], [ %indvars.iv.next458.i, %if.then72.i ]
  %unHi.1.ph396.i = phi i32 [ %unHi.0.ph.i, %if.end65.lr.ph.preheader.i ], [ %dec83.i, %if.then72.i ]
  %gtHi.1.ph395.i = phi i32 [ %gtHi.0.ph.i, %if.end65.lr.ph.preheader.i ], [ %dec82.i, %if.then72.i ]
  %75 = sext i32 %unHi.1.ph396.i to i64
  br label %if.end65.i

if.end84.i:                                       ; preds = %if.end65.i
  %cmp85.i = icmp slt i32 %72, %med.0.i
  br i1 %cmp85.i, label %if.end92.i, label %if.end87.i

if.end87.i:                                       ; preds = %if.end84.i
  %dec88.i = add nsw i32 %unHi.1385.i, -1
  %cmp63.i = icmp slt i64 %69, %indvars.iv455.i
  %indvars.iv.next456.i = add nsw i64 %indvars.iv455.i, -1
  br i1 %cmp63.i, label %if.end65.i, label %while.end104.loopexit.i

if.end92.i:                                       ; preds = %if.end84.i
  %76 = trunc i64 %indvars.iv457.i to i32
  %77 = trunc i64 %indvars.iv455.i to i32
  %arrayidx95.i = getelementptr inbounds i32, i32* %fmap, i64 %69
  %78 = load i32, i32* %arrayidx95.i, align 4
  store i32 %71, i32* %arrayidx95.i, align 4
  store i32 %78, i32* %arrayidx67.i, align 4
  %inc102.i = add nsw i32 %unLo.0.lcssa.i, 1
  %dec103.i = add nsw i32 %77, -1
  br label %while.body35.outer.i

while.end104.loopexit.i:                          ; preds = %if.end87.i
  %79 = trunc i64 %indvars.iv457.i to i32
  br label %while.end104.i

while.end104.i:                                   ; preds = %while.body62.preheader.i, %if.then72.i, %while.end104.loopexit.i
  %gtHi.1.ph.lcssa369.i = phi i32 [ %79, %while.end104.loopexit.i ], [ %dec82.i, %if.then72.i ], [ %gtHi.0.ph.i, %while.body62.preheader.i ]
  %unHi.1.lcssa.i = phi i32 [ %dec88.i, %while.end104.loopexit.i ], [ %dec83.i, %if.then72.i ], [ %unHi.0.ph.i, %while.body62.preheader.i ]
  %cmp105.i = icmp slt i32 %gtHi.1.ph.lcssa369.i, %ltLo.0.ph357.lcssa.i
  br i1 %cmp105.i, label %while.cond.outer.backedge.i, label %if.end107.i

while.cond.outer.backedge.i:                      ; preds = %if.else180.i, %if.then169.i, %while.end104.i
  %sp.0.ph.be.i = phi i32 [ %inc190.i, %if.else180.i ], [ %inc179.i, %if.then169.i ], [ %dec.i, %while.end104.i ]
  %cmp370.i = icmp sgt i32 %sp.0.ph.be.i, 0
  br i1 %cmp370.i, label %while.body.lr.ph.i, label %fallbackQSort3.exit

if.end107.i:                                      ; preds = %while.end104.i
  %sub108.i = sub nsw i32 %ltLo.0.ph357.lcssa.i, %34
  %sub109.i = sub nsw i32 %unLo.0.lcssa.i, %ltLo.0.ph357.lcssa.i
  %cmp110.i = icmp slt i32 %sub108.i, %sub109.i
  %sub108.sub109.i = select i1 %cmp110.i, i32 %sub108.i, i32 %sub109.i
  %cmp115405.i = icmp sgt i32 %sub108.sub109.i, 0
  br i1 %cmp115405.i, label %while.body116.preheader.i, label %while.end129.i

while.body116.preheader.i:                        ; preds = %if.end107.i
  %80 = add i32 %unLo.0.lcssa.i, 1
  %81 = add i32 %ltLo.0.ph357.lcssa.i, -1
  %82 = sub i32 %81, %unLo.0.lcssa.i
  %83 = add i32 %34, -1
  %84 = sub i32 %83, %ltLo.0.ph357.lcssa.i
  %85 = icmp sgt i32 %82, %84
  %smax.i = select i1 %85, i32 %82, i32 %84
  %86 = add i32 %80, %smax.i
  %87 = sext i32 %86 to i64
  %88 = sext i32 %34 to i64
  %89 = add i32 %ltLo.0.ph357.lcssa.i, -1
  %90 = sub i32 %89, %unLo.0.lcssa.i
  %91 = add i32 %34, -1
  %92 = sub i32 %91, %ltLo.0.ph357.lcssa.i
  %93 = icmp sgt i32 %90, %92
  %smax679 = select i1 %93, i32 %90, i32 %92
  %94 = icmp sgt i32 %smax679, -2
  %smax680 = select i1 %94, i32 %smax679, i32 -2
  %95 = icmp sgt i32 %90, %92
  %smax681 = select i1 %95, i32 %90, i32 %92
  %96 = sub i32 %smax680, %smax681
  %97 = zext i32 %96 to i64
  %98 = add nuw nsw i64 %97, 1
  %min.iters.check682 = icmp ult i64 %98, 4
  br i1 %min.iters.check682, label %while.body116.i, label %min.iters.checked683

min.iters.checked683:                             ; preds = %while.body116.preheader.i
  %n.vec685 = and i64 %98, 8589934588
  %cmp.zero686 = icmp eq i64 %n.vec685, 0
  br i1 %cmp.zero686, label %while.body116.i, label %vector.memcheck703

vector.memcheck703:                               ; preds = %min.iters.checked683
  %99 = sext i32 %34 to i64
  %scevgep688 = getelementptr i32, i32* %fmap, i64 %99
  %100 = add i32 %ltLo.0.ph357.lcssa.i, -1
  %101 = sub i32 %100, %unLo.0.lcssa.i
  %102 = add i32 %34, -1
  %103 = sub i32 %102, %ltLo.0.ph357.lcssa.i
  %104 = icmp sgt i32 %101, %103
  %smax690 = select i1 %104, i32 %101, i32 %103
  %105 = icmp sgt i32 %smax690, -2
  %smax691 = select i1 %105, i32 %smax690, i32 -2
  %106 = icmp sgt i32 %101, %103
  %smax692 = select i1 %106, i32 %101, i32 %103
  %107 = sub i32 %smax691, %smax692
  %108 = zext i32 %107 to i64
  %109 = add nsw i64 %99, %108
  %scevgep693 = getelementptr i32, i32* %fmap, i64 %109
  %110 = add i32 %unLo.0.lcssa.i, 1
  %111 = add i32 %110, %smax692
  %112 = sext i32 %111 to i64
  %scevgep695 = getelementptr i32, i32* %fmap, i64 %112
  %113 = add nsw i64 %112, %108
  %scevgep697 = getelementptr i32, i32* %fmap, i64 %113
  %bound0699 = icmp ule i32* %scevgep688, %scevgep697
  %bound1700 = icmp ule i32* %scevgep695, %scevgep693
  %memcheck.conflict702 = and i1 %bound0699, %bound1700
  %ind.end708 = add nsw i64 %88, %n.vec685
  %ind.end710 = add nsw i64 %87, %n.vec685
  %cast.crd712 = trunc i64 %n.vec685 to i32
  %ind.end713 = sub i32 %sub108.sub109.i, %cast.crd712
  br i1 %memcheck.conflict702, label %while.body116.i, label %vector.body676

vector.body676:                                   ; preds = %vector.memcheck703, %vector.body676
  %index705 = phi i64 [ %index.next706, %vector.body676 ], [ 0, %vector.memcheck703 ]
  %offset.idx715 = add i64 %88, %index705
  %offset.idx719 = add i64 %87, %index705
  %114 = getelementptr inbounds i32, i32* %fmap, i64 %offset.idx715
  %115 = bitcast i32* %114 to <4 x i32>*
  %wide.load727 = load <4 x i32>, <4 x i32>* %115, align 4
  %116 = getelementptr inbounds i32, i32* %fmap, i64 %offset.idx719
  %117 = bitcast i32* %116 to <4 x i32>*
  %wide.load728 = load <4 x i32>, <4 x i32>* %117, align 4
  %118 = bitcast i32* %114 to <4 x i32>*
  store <4 x i32> %wide.load728, <4 x i32>* %118, align 4
  %119 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> %wide.load727, <4 x i32>* %119, align 4
  %index.next706 = add i64 %index705, 4
  %120 = icmp eq i64 %index.next706, %n.vec685
  br i1 %120, label %middle.block677, label %vector.body676, !llvm.loop !10

middle.block677:                                  ; preds = %vector.body676
  %cmp.n714 = icmp eq i64 %98, %n.vec685
  br i1 %cmp.n714, label %while.end129.i, label %while.body116.i

while.body116.i:                                  ; preds = %while.body116.preheader.i, %min.iters.checked683, %vector.memcheck703, %middle.block677, %while.body116.i
  %indvars.iv461.i = phi i64 [ %indvars.iv.next462.i, %while.body116.i ], [ %ind.end708, %middle.block677 ], [ %88, %while.body116.preheader.i ], [ %88, %min.iters.checked683 ], [ %88, %vector.memcheck703 ]
  %indvars.iv459.i = phi i64 [ %indvars.iv.next460.i, %while.body116.i ], [ %ind.end710, %middle.block677 ], [ %87, %while.body116.preheader.i ], [ %87, %min.iters.checked683 ], [ %87, %vector.memcheck703 ]
  %yyn.0408.i = phi i32 [ %dec128.i, %while.body116.i ], [ %ind.end713, %middle.block677 ], [ %sub108.sub109.i, %while.body116.preheader.i ], [ %sub108.sub109.i, %min.iters.checked683 ], [ %sub108.sub109.i, %vector.memcheck703 ]
  %arrayidx119.i = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv461.i
  %121 = load i32, i32* %arrayidx119.i, align 4
  %arrayidx121.i = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv459.i
  %122 = load i32, i32* %arrayidx121.i, align 4
  store i32 %122, i32* %arrayidx119.i, align 4
  store i32 %121, i32* %arrayidx121.i, align 4
  %dec128.i = add nsw i32 %yyn.0408.i, -1
  %cmp115.i = icmp sgt i32 %yyn.0408.i, 1
  %indvars.iv.next460.i = add nsw i64 %indvars.iv459.i, 1
  %indvars.iv.next462.i = add nsw i64 %indvars.iv461.i, 1
  br i1 %cmp115.i, label %while.body116.i, label %while.end129.i, !llvm.loop !11

while.end129.i:                                   ; preds = %while.body116.i, %middle.block677, %if.end107.i
  %sub130.i = sub nsw i32 %35, %gtHi.1.ph.lcssa369.i
  %sub131.i = sub nsw i32 %gtHi.1.ph.lcssa369.i, %unHi.1.lcssa.i
  %cmp132.i = icmp slt i32 %sub130.i, %sub131.i
  %sub130.sub131.i = select i1 %cmp132.i, i32 %sub130.i, i32 %sub131.i
  %cmp145410.i = icmp sgt i32 %sub130.sub131.i, 0
  br i1 %cmp145410.i, label %while.body146.preheader.i, label %while.end159.i

while.body146.preheader.i:                        ; preds = %while.end129.i
  %sub141.i = sub nsw i32 %35, %sub130.sub131.i
  %123 = sext i32 %unLo.0.lcssa.i to i64
  %124 = add i32 %unHi.1.lcssa.i, -1
  %125 = sub i32 %124, %gtHi.1.ph.lcssa369.i
  %126 = add i32 %gtHi.1.ph.lcssa369.i, -1
  %127 = sub i32 %126, %35
  %128 = icmp sgt i32 %125, %127
  %smax649 = select i1 %128, i32 %125, i32 %127
  %129 = icmp sgt i32 %smax649, -2
  %smax650 = select i1 %129, i32 %smax649, i32 -2
  %130 = icmp sgt i32 %125, %127
  %smax651 = select i1 %130, i32 %125, i32 %127
  %131 = sub i32 %smax650, %smax651
  %132 = zext i32 %131 to i64
  %133 = add nuw nsw i64 %132, 1
  %min.iters.check = icmp ult i64 %133, 4
  br i1 %min.iters.check, label %while.body146.i, label %min.iters.checked

min.iters.checked:                                ; preds = %while.body146.preheader.i
  %n.vec = and i64 %133, 8589934588
  %cmp.zero = icmp eq i64 %n.vec, 0
  br i1 %cmp.zero, label %while.body146.i, label %vector.memcheck

vector.memcheck:                                  ; preds = %min.iters.checked
  %134 = sext i32 %unLo.0.lcssa.i to i64
  %scevgep = getelementptr i32, i32* %fmap, i64 %134
  %135 = add i32 %unHi.1.lcssa.i, -1
  %136 = sub i32 %135, %gtHi.1.ph.lcssa369.i
  %137 = add i32 %gtHi.1.ph.lcssa369.i, -1
  %138 = sub i32 %137, %35
  %139 = icmp sgt i32 %136, %138
  %smax653 = select i1 %139, i32 %136, i32 %138
  %140 = icmp sgt i32 %smax653, -2
  %smax654 = select i1 %140, i32 %smax653, i32 -2
  %141 = icmp sgt i32 %136, %138
  %smax655 = select i1 %141, i32 %136, i32 %138
  %142 = sub i32 %smax654, %smax655
  %143 = zext i32 %142 to i64
  %144 = add nsw i64 %134, %143
  %scevgep656 = getelementptr i32, i32* %fmap, i64 %144
  %145 = add i32 %35, 2
  %146 = add i32 %145, %smax655
  %147 = sext i32 %146 to i64
  %scevgep658 = getelementptr i32, i32* %fmap, i64 %147
  %148 = add nsw i64 %147, %143
  %scevgep660 = getelementptr i32, i32* %fmap, i64 %148
  %bound0 = icmp ule i32* %scevgep, %scevgep660
  %bound1 = icmp ule i32* %scevgep658, %scevgep656
  %memcheck.conflict = and i1 %bound0, %bound1
  %ind.end = add nsw i64 %123, %n.vec
  %cast.crd = trunc i64 %n.vec to i32
  %ind.end663 = add i32 %sub141.i, %cast.crd
  %cast.crd665 = trunc i64 %n.vec to i32
  %ind.end666 = sub i32 %sub130.sub131.i, %cast.crd665
  br i1 %memcheck.conflict, label %while.body146.i, label %vector.body

vector.body:                                      ; preds = %vector.memcheck, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %vector.memcheck ]
  %offset.idx = add i64 %123, %index
  %149 = trunc i64 %index to i32
  %offset.idx667 = add i32 %sub141.i, %149
  %150 = getelementptr inbounds i32, i32* %fmap, i64 %offset.idx
  %151 = bitcast i32* %150 to <4 x i32>*
  %wide.load = load <4 x i32>, <4 x i32>* %151, align 4
  %152 = add i32 %offset.idx667, 1
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i32, i32* %fmap, i64 %153
  %155 = bitcast i32* %154 to <4 x i32>*
  %wide.load675 = load <4 x i32>, <4 x i32>* %155, align 4
  %156 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> %wide.load675, <4 x i32>* %156, align 4
  %157 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> %wide.load, <4 x i32>* %157, align 4
  %index.next = add i64 %index, 4
  %158 = icmp eq i64 %index.next, %n.vec
  br i1 %158, label %middle.block, label %vector.body, !llvm.loop !12

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %133, %n.vec
  br i1 %cmp.n, label %while.end159.i, label %while.body146.i

while.body146.i:                                  ; preds = %while.body146.preheader.i, %min.iters.checked, %vector.memcheck, %middle.block, %while.body146.i
  %indvars.iv466.i = phi i64 [ %indvars.iv.next467.i, %while.body146.i ], [ %ind.end, %middle.block ], [ %123, %while.body146.preheader.i ], [ %123, %min.iters.checked ], [ %123, %vector.memcheck ]
  %yyp2140.0413.in.i = phi i32 [ %yyp2140.0413.i, %while.body146.i ], [ %ind.end663, %middle.block ], [ %sub141.i, %while.body146.preheader.i ], [ %sub141.i, %min.iters.checked ], [ %sub141.i, %vector.memcheck ]
  %yyn143.0412.i = phi i32 [ %dec158.i, %while.body146.i ], [ %ind.end666, %middle.block ], [ %sub130.sub131.i, %while.body146.preheader.i ], [ %sub130.sub131.i, %min.iters.checked ], [ %sub130.sub131.i, %vector.memcheck ]
  %yyp2140.0413.i = add nsw i32 %yyp2140.0413.in.i, 1
  %arrayidx149.i = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv466.i
  %159 = load i32, i32* %arrayidx149.i, align 4
  %idxprom150.i = sext i32 %yyp2140.0413.i to i64
  %arrayidx151.i = getelementptr inbounds i32, i32* %fmap, i64 %idxprom150.i
  %160 = load i32, i32* %arrayidx151.i, align 4
  store i32 %160, i32* %arrayidx149.i, align 4
  store i32 %159, i32* %arrayidx151.i, align 4
  %dec158.i = add nsw i32 %yyn143.0412.i, -1
  %cmp145.i = icmp sgt i32 %yyn143.0412.i, 1
  %indvars.iv.next467.i = add nsw i64 %indvars.iv466.i, 1
  br i1 %cmp145.i, label %while.body146.i, label %while.end159.i, !llvm.loop !13

while.end159.i:                                   ; preds = %while.body146.i, %middle.block, %while.end129.i
  %add160.i = add i32 %34, -1
  %sub161.i = sub i32 %add160.i, %ltLo.0.ph357.lcssa.i
  %sub162.i = add i32 %sub161.i, %unLo.0.lcssa.i
  %sub164.i = sub nsw i32 %35, %sub131.i
  %add165.i = add nsw i32 %sub164.i, 1
  %sub166.i = sub nsw i32 %sub162.i, %34
  %sub167.i = sub nsw i32 %35, %add165.i
  %cmp168.i = icmp sgt i32 %sub166.i, %sub167.i
  br i1 %cmp168.i, label %if.then169.i, label %if.else180.i

if.then169.i:                                     ; preds = %while.end159.i
  store i32 %sub162.i, i32* %arrayidx7.i, align 4
  %sext474.i = shl i64 %indvars.iv542, 32
  %idxprom175.i = ashr exact i64 %sext474.i, 32
  %arrayidx176.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo.i, i64 0, i64 %idxprom175.i
  store i32 %add165.i, i32* %arrayidx176.i, align 4
  %arrayidx178.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi.i, i64 0, i64 %idxprom175.i
  store i32 %35, i32* %arrayidx178.i, align 4
  %inc179.i = add nsw i32 %56, 1
  br label %while.cond.outer.backedge.i

if.else180.i:                                     ; preds = %while.end159.i
  store i32 %add165.i, i32* %arrayidx5.i, align 4
  %sext.i = shl i64 %indvars.iv542, 32
  %idxprom186.i = ashr exact i64 %sext.i, 32
  %arrayidx187.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo.i, i64 0, i64 %idxprom186.i
  store i32 %34, i32* %arrayidx187.i, align 4
  %arrayidx189.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi.i, i64 0, i64 %idxprom186.i
  store i32 %sub162.i, i32* %arrayidx189.i, align 4
  %inc190.i = add nsw i32 %56, 1
  br label %while.cond.outer.backedge.i

fallbackQSort3.exit:                              ; preds = %while.cond.outer.backedge.i, %while.cond.backedge.i
  call void @llvm.lifetime.end(i64 400, i8* %20) #5
  call void @llvm.lifetime.end(i64 400, i8* %19) #5
  %cmp234483 = icmp sgt i32 %k.4, %k.8
  br i1 %cmp234483, label %while.body130.outer, label %for.body236.preheader

for.body236.preheader:                            ; preds = %fallbackQSort3.exit
  %161 = sext i32 %sub173.le to i64
  br label %for.body236

for.body236:                                      ; preds = %for.body236.preheader, %for.inc251
  %indvars.iv546 = phi i64 [ %161, %for.body236.preheader ], [ %indvars.iv.next547, %for.inc251 ]
  %i.9485 = phi i32 [ %sub173.le, %for.body236.preheader ], [ %inc252, %for.inc251 ]
  %cc.0484 = phi i32 [ -1, %for.body236.preheader ], [ %cc.1, %for.inc251 ]
  %arrayidx238 = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv546
  %162 = load i32, i32* %arrayidx238, align 4
  %idxprom239 = zext i32 %162 to i64
  %arrayidx240 = getelementptr inbounds i32, i32* %eclass, i64 %idxprom239
  %163 = load i32, i32* %arrayidx240, align 4
  %cmp241 = icmp eq i32 %cc.0484, %163
  br i1 %cmp241, label %for.inc251, label %if.then243

if.then243:                                       ; preds = %for.body236
  %164 = trunc i64 %indvars.iv546 to i32
  %and244 = and i32 %164, 31
  %shl245 = shl i32 1, %and244
  %shr246 = ashr i32 %164, 5
  %idxprom247 = sext i32 %shr246 to i64
  %arrayidx248 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom247
  %165 = load i32, i32* %arrayidx248, align 4
  %or249 = or i32 %165, %shl245
  store i32 %or249, i32* %arrayidx248, align 4
  br label %for.inc251

for.inc251:                                       ; preds = %for.body236, %if.then243
  %cc.1 = phi i32 [ %163, %if.then243 ], [ %cc.0484, %for.body236 ]
  %inc252 = add nsw i32 %i.9485, 1
  %cmp234 = icmp slt i32 %inc252, %k.8
  %indvars.iv.next547 = add nsw i64 %indvars.iv546, 1
  br i1 %cmp234, label %for.body236, label %while.body130.outer

while.end255:                                     ; preds = %if.end221, %if.end172
  br i1 %cmp, label %if.then258, label %if.end260

if.then258:                                       ; preds = %while.end255
  %166 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call259 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %166, i8* nonnull getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0), i32 %nNotDone.0.ph) #7
  br label %if.end260

if.end260:                                        ; preds = %if.then258, %while.end255
  %mul261 = shl nsw i32 %H.0, 1
  %cmp262 = icmp sgt i32 %mul261, %nblock
  %cmp264 = icmp eq i32 %nNotDone.0.ph, 0
  %or.cond = or i1 %cmp262, %cmp264
  br i1 %or.cond, label %while.end268, label %while.body

while.end268:                                     ; preds = %if.end260
  br i1 %cmp, label %if.then271, label %for.cond274.preheader

if.then271:                                       ; preds = %while.end268
  %167 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %168 = tail call i64 @fwrite(i8* nonnull getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i64 33, i64 1, %struct._IO_FILE* %167) #7
  br label %for.cond274.preheader

for.cond274.preheader:                            ; preds = %if.then271, %while.end268
  br i1 %cmp3494, label %while.cond278.preheader, label %if.end299

while.cond278.preheader:                          ; preds = %for.cond274.preheader, %while.end285
  %indvars.iv536 = phi i64 [ %indvars.iv.next537, %while.end285 ], [ 0, %for.cond274.preheader ]
  %j.2478 = phi i64 [ %indvars.iv, %while.end285 ], [ 0, %for.cond274.preheader ]
  %sext = shl i64 %j.2478, 32
  %169 = ashr exact i64 %sext, 32
  br label %while.cond278

while.cond278:                                    ; preds = %while.cond278, %while.cond278.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %while.cond278 ], [ %169, %while.cond278.preheader ]
  %arrayidx280 = getelementptr inbounds [256 x i32], [256 x i32]* %ftabCopy, i64 0, i64 %indvars.iv
  %170 = load i32, i32* %arrayidx280, align 4
  %cmp281 = icmp eq i32 %170, 0
  %indvars.iv.next = add i64 %indvars.iv, 1
  br i1 %cmp281, label %while.cond278, label %while.end285

while.end285:                                     ; preds = %while.cond278
  %dec = add nsw i32 %170, -1
  store i32 %dec, i32* %arrayidx280, align 4
  %conv288 = trunc i64 %indvars.iv to i8
  %arrayidx290 = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv536
  %171 = load i32, i32* %arrayidx290, align 4
  %idxprom291 = zext i32 %171 to i64
  %arrayidx292 = getelementptr inbounds i8, i8* %2, i64 %idxprom291
  store i8 %conv288, i8* %arrayidx292, align 1
  %indvars.iv.next537 = add nuw nsw i64 %indvars.iv536, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next537 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nblock
  br i1 %exitcond, label %for.end295, label %while.cond278.preheader

for.end295:                                       ; preds = %while.end285
  %172 = trunc i64 %indvars.iv to i32
  %phitmp = icmp slt i32 %172, 256
  br i1 %phitmp, label %if.end299, label %if.then298

if.then298:                                       ; preds = %for.end295
  tail call void @BZ2_bz__AssertH__fail(i32 1005) #5
  br label %if.end299

if.end299:                                        ; preds = %for.cond274.preheader, %if.then298, %for.end295
  call void @llvm.lifetime.end(i64 1024, i8* %1) #5
  call void @llvm.lifetime.end(i64 1028, i8* %0) #5
  ret void
}

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #2

declare void @BZ2_bz__AssertH__fail(i32) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: norecurse nounwind uwtable
define internal fastcc zeroext i8 @mainGtU(i32 %i1, i32 %i2, i8* readonly %block, i16* nocapture readonly %quadrant, i32 %nblock, i32* nocapture %budget) unnamed_addr #4 {
entry:
  %idxprom = zext i32 %i1 to i64
  %arrayidx = getelementptr inbounds i8, i8* %block, i64 %idxprom
  %0 = load i8, i8* %arrayidx, align 1
  %idxprom1 = zext i32 %i2 to i64
  %arrayidx2 = getelementptr inbounds i8, i8* %block, i64 %idxprom1
  %1 = load i8, i8* %arrayidx2, align 1
  %cmp = icmp eq i8 %0, %1
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %cmp7 = icmp ugt i8 %0, %1
  br label %cleanup

if.end:                                           ; preds = %entry
  %inc = add i32 %i1, 1
  %inc10 = add i32 %i2, 1
  %idxprom11 = zext i32 %inc to i64
  %arrayidx12 = getelementptr inbounds i8, i8* %block, i64 %idxprom11
  %2 = load i8, i8* %arrayidx12, align 1
  %idxprom13 = zext i32 %inc10 to i64
  %arrayidx14 = getelementptr inbounds i8, i8* %block, i64 %idxprom13
  %3 = load i8, i8* %arrayidx14, align 1
  %cmp17 = icmp eq i8 %2, %3
  br i1 %cmp17, label %if.end25, label %if.then19

if.then19:                                        ; preds = %if.end
  %cmp22 = icmp ugt i8 %2, %3
  br label %cleanup

if.end25:                                         ; preds = %if.end
  %inc26 = add i32 %i1, 2
  %inc27 = add i32 %i2, 2
  %idxprom28 = zext i32 %inc26 to i64
  %arrayidx29 = getelementptr inbounds i8, i8* %block, i64 %idxprom28
  %4 = load i8, i8* %arrayidx29, align 1
  %idxprom30 = zext i32 %inc27 to i64
  %arrayidx31 = getelementptr inbounds i8, i8* %block, i64 %idxprom30
  %5 = load i8, i8* %arrayidx31, align 1
  %cmp34 = icmp eq i8 %4, %5
  br i1 %cmp34, label %if.end42, label %if.then36

if.then36:                                        ; preds = %if.end25
  %cmp39 = icmp ugt i8 %4, %5
  br label %cleanup

if.end42:                                         ; preds = %if.end25
  %inc43 = add i32 %i1, 3
  %inc44 = add i32 %i2, 3
  %idxprom45 = zext i32 %inc43 to i64
  %arrayidx46 = getelementptr inbounds i8, i8* %block, i64 %idxprom45
  %6 = load i8, i8* %arrayidx46, align 1
  %idxprom47 = zext i32 %inc44 to i64
  %arrayidx48 = getelementptr inbounds i8, i8* %block, i64 %idxprom47
  %7 = load i8, i8* %arrayidx48, align 1
  %cmp51 = icmp eq i8 %6, %7
  br i1 %cmp51, label %if.end59, label %if.then53

if.then53:                                        ; preds = %if.end42
  %cmp56 = icmp ugt i8 %6, %7
  br label %cleanup

if.end59:                                         ; preds = %if.end42
  %inc60 = add i32 %i1, 4
  %inc61 = add i32 %i2, 4
  %idxprom62 = zext i32 %inc60 to i64
  %arrayidx63 = getelementptr inbounds i8, i8* %block, i64 %idxprom62
  %8 = load i8, i8* %arrayidx63, align 1
  %idxprom64 = zext i32 %inc61 to i64
  %arrayidx65 = getelementptr inbounds i8, i8* %block, i64 %idxprom64
  %9 = load i8, i8* %arrayidx65, align 1
  %cmp68 = icmp eq i8 %8, %9
  br i1 %cmp68, label %if.end76, label %if.then70

if.then70:                                        ; preds = %if.end59
  %cmp73 = icmp ugt i8 %8, %9
  br label %cleanup

if.end76:                                         ; preds = %if.end59
  %inc77 = add i32 %i1, 5
  %inc78 = add i32 %i2, 5
  %idxprom79 = zext i32 %inc77 to i64
  %arrayidx80 = getelementptr inbounds i8, i8* %block, i64 %idxprom79
  %10 = load i8, i8* %arrayidx80, align 1
  %idxprom81 = zext i32 %inc78 to i64
  %arrayidx82 = getelementptr inbounds i8, i8* %block, i64 %idxprom81
  %11 = load i8, i8* %arrayidx82, align 1
  %cmp85 = icmp eq i8 %10, %11
  br i1 %cmp85, label %if.end93, label %if.then87

if.then87:                                        ; preds = %if.end76
  %cmp90 = icmp ugt i8 %10, %11
  br label %cleanup

if.end93:                                         ; preds = %if.end76
  %inc94 = add i32 %i1, 6
  %inc95 = add i32 %i2, 6
  %idxprom96 = zext i32 %inc94 to i64
  %arrayidx97 = getelementptr inbounds i8, i8* %block, i64 %idxprom96
  %12 = load i8, i8* %arrayidx97, align 1
  %idxprom98 = zext i32 %inc95 to i64
  %arrayidx99 = getelementptr inbounds i8, i8* %block, i64 %idxprom98
  %13 = load i8, i8* %arrayidx99, align 1
  %cmp102 = icmp eq i8 %12, %13
  br i1 %cmp102, label %if.end110, label %if.then104

if.then104:                                       ; preds = %if.end93
  %cmp107 = icmp ugt i8 %12, %13
  br label %cleanup

if.end110:                                        ; preds = %if.end93
  %inc111 = add i32 %i1, 7
  %inc112 = add i32 %i2, 7
  %idxprom113 = zext i32 %inc111 to i64
  %arrayidx114 = getelementptr inbounds i8, i8* %block, i64 %idxprom113
  %14 = load i8, i8* %arrayidx114, align 1
  %idxprom115 = zext i32 %inc112 to i64
  %arrayidx116 = getelementptr inbounds i8, i8* %block, i64 %idxprom115
  %15 = load i8, i8* %arrayidx116, align 1
  %cmp119 = icmp eq i8 %14, %15
  br i1 %cmp119, label %if.end127, label %if.then121

if.then121:                                       ; preds = %if.end110
  %cmp124 = icmp ugt i8 %14, %15
  br label %cleanup

if.end127:                                        ; preds = %if.end110
  %inc128 = add i32 %i1, 8
  %inc129 = add i32 %i2, 8
  %idxprom130 = zext i32 %inc128 to i64
  %arrayidx131 = getelementptr inbounds i8, i8* %block, i64 %idxprom130
  %16 = load i8, i8* %arrayidx131, align 1
  %idxprom132 = zext i32 %inc129 to i64
  %arrayidx133 = getelementptr inbounds i8, i8* %block, i64 %idxprom132
  %17 = load i8, i8* %arrayidx133, align 1
  %cmp136 = icmp eq i8 %16, %17
  br i1 %cmp136, label %if.end144, label %if.then138

if.then138:                                       ; preds = %if.end127
  %cmp141 = icmp ugt i8 %16, %17
  br label %cleanup

if.end144:                                        ; preds = %if.end127
  %inc145 = add i32 %i1, 9
  %inc146 = add i32 %i2, 9
  %idxprom147 = zext i32 %inc145 to i64
  %arrayidx148 = getelementptr inbounds i8, i8* %block, i64 %idxprom147
  %18 = load i8, i8* %arrayidx148, align 1
  %idxprom149 = zext i32 %inc146 to i64
  %arrayidx150 = getelementptr inbounds i8, i8* %block, i64 %idxprom149
  %19 = load i8, i8* %arrayidx150, align 1
  %cmp153 = icmp eq i8 %18, %19
  br i1 %cmp153, label %if.end161, label %if.then155

if.then155:                                       ; preds = %if.end144
  %cmp158 = icmp ugt i8 %18, %19
  br label %cleanup

if.end161:                                        ; preds = %if.end144
  %inc162 = add i32 %i1, 10
  %inc163 = add i32 %i2, 10
  %idxprom164 = zext i32 %inc162 to i64
  %arrayidx165 = getelementptr inbounds i8, i8* %block, i64 %idxprom164
  %20 = load i8, i8* %arrayidx165, align 1
  %idxprom166 = zext i32 %inc163 to i64
  %arrayidx167 = getelementptr inbounds i8, i8* %block, i64 %idxprom166
  %21 = load i8, i8* %arrayidx167, align 1
  %cmp170 = icmp eq i8 %20, %21
  br i1 %cmp170, label %if.end178, label %if.then172

if.then172:                                       ; preds = %if.end161
  %cmp175 = icmp ugt i8 %20, %21
  br label %cleanup

if.end178:                                        ; preds = %if.end161
  %inc179 = add i32 %i1, 11
  %inc180 = add i32 %i2, 11
  %idxprom181 = zext i32 %inc179 to i64
  %arrayidx182 = getelementptr inbounds i8, i8* %block, i64 %idxprom181
  %22 = load i8, i8* %arrayidx182, align 1
  %idxprom183 = zext i32 %inc180 to i64
  %arrayidx184 = getelementptr inbounds i8, i8* %block, i64 %idxprom183
  %23 = load i8, i8* %arrayidx184, align 1
  %cmp187 = icmp eq i8 %22, %23
  br i1 %cmp187, label %if.end195, label %if.then189

if.then189:                                       ; preds = %if.end178
  %cmp192 = icmp ugt i8 %22, %23
  br label %cleanup

if.end195:                                        ; preds = %if.end178
  %inc196 = add i32 %i1, 12
  %inc197 = add i32 %i2, 12
  %add = add i32 %nblock, 8
  br label %do.body

do.body:                                          ; preds = %if.end451, %if.end195
  %i2.addr.0 = phi i32 [ %inc197, %if.end195 ], [ %i2.addr.1, %if.end451 ]
  %i1.addr.0 = phi i32 [ %inc196, %if.end195 ], [ %inc452.sub, %if.end451 ]
  %k.0 = phi i32 [ %add, %if.end195 ], [ %sub463, %if.end451 ]
  %idxprom198 = zext i32 %i1.addr.0 to i64
  %arrayidx199 = getelementptr inbounds i8, i8* %block, i64 %idxprom198
  %24 = load i8, i8* %arrayidx199, align 1
  %idxprom200 = zext i32 %i2.addr.0 to i64
  %arrayidx201 = getelementptr inbounds i8, i8* %block, i64 %idxprom200
  %25 = load i8, i8* %arrayidx201, align 1
  %cmp204 = icmp eq i8 %24, %25
  br i1 %cmp204, label %if.end212, label %if.then206

if.then206:                                       ; preds = %do.body
  %cmp209 = icmp ugt i8 %24, %25
  br label %cleanup

if.end212:                                        ; preds = %do.body
  %arrayidx214 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom198
  %26 = load i16, i16* %arrayidx214, align 2
  %arrayidx216 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom200
  %27 = load i16, i16* %arrayidx216, align 2
  %cmp219 = icmp eq i16 %26, %27
  br i1 %cmp219, label %if.end227, label %if.then221

if.then221:                                       ; preds = %if.end212
  %cmp224 = icmp ugt i16 %26, %27
  br label %cleanup

if.end227:                                        ; preds = %if.end212
  %inc228 = add i32 %i1.addr.0, 1
  %inc229 = add i32 %i2.addr.0, 1
  %idxprom230 = zext i32 %inc228 to i64
  %arrayidx231 = getelementptr inbounds i8, i8* %block, i64 %idxprom230
  %28 = load i8, i8* %arrayidx231, align 1
  %idxprom232 = zext i32 %inc229 to i64
  %arrayidx233 = getelementptr inbounds i8, i8* %block, i64 %idxprom232
  %29 = load i8, i8* %arrayidx233, align 1
  %cmp236 = icmp eq i8 %28, %29
  br i1 %cmp236, label %if.end244, label %if.then238

if.then238:                                       ; preds = %if.end227
  %cmp241 = icmp ugt i8 %28, %29
  br label %cleanup

if.end244:                                        ; preds = %if.end227
  %arrayidx246 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom230
  %30 = load i16, i16* %arrayidx246, align 2
  %arrayidx248 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom232
  %31 = load i16, i16* %arrayidx248, align 2
  %cmp251 = icmp eq i16 %30, %31
  br i1 %cmp251, label %if.end259, label %if.then253

if.then253:                                       ; preds = %if.end244
  %cmp256 = icmp ugt i16 %30, %31
  br label %cleanup

if.end259:                                        ; preds = %if.end244
  %inc260 = add i32 %i1.addr.0, 2
  %inc261 = add i32 %i2.addr.0, 2
  %idxprom262 = zext i32 %inc260 to i64
  %arrayidx263 = getelementptr inbounds i8, i8* %block, i64 %idxprom262
  %32 = load i8, i8* %arrayidx263, align 1
  %idxprom264 = zext i32 %inc261 to i64
  %arrayidx265 = getelementptr inbounds i8, i8* %block, i64 %idxprom264
  %33 = load i8, i8* %arrayidx265, align 1
  %cmp268 = icmp eq i8 %32, %33
  br i1 %cmp268, label %if.end276, label %if.then270

if.then270:                                       ; preds = %if.end259
  %cmp273 = icmp ugt i8 %32, %33
  br label %cleanup

if.end276:                                        ; preds = %if.end259
  %arrayidx278 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom262
  %34 = load i16, i16* %arrayidx278, align 2
  %arrayidx280 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom264
  %35 = load i16, i16* %arrayidx280, align 2
  %cmp283 = icmp eq i16 %34, %35
  br i1 %cmp283, label %if.end291, label %if.then285

if.then285:                                       ; preds = %if.end276
  %cmp288 = icmp ugt i16 %34, %35
  br label %cleanup

if.end291:                                        ; preds = %if.end276
  %inc292 = add i32 %i1.addr.0, 3
  %inc293 = add i32 %i2.addr.0, 3
  %idxprom294 = zext i32 %inc292 to i64
  %arrayidx295 = getelementptr inbounds i8, i8* %block, i64 %idxprom294
  %36 = load i8, i8* %arrayidx295, align 1
  %idxprom296 = zext i32 %inc293 to i64
  %arrayidx297 = getelementptr inbounds i8, i8* %block, i64 %idxprom296
  %37 = load i8, i8* %arrayidx297, align 1
  %cmp300 = icmp eq i8 %36, %37
  br i1 %cmp300, label %if.end308, label %if.then302

if.then302:                                       ; preds = %if.end291
  %cmp305 = icmp ugt i8 %36, %37
  br label %cleanup

if.end308:                                        ; preds = %if.end291
  %arrayidx310 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom294
  %38 = load i16, i16* %arrayidx310, align 2
  %arrayidx312 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom296
  %39 = load i16, i16* %arrayidx312, align 2
  %cmp315 = icmp eq i16 %38, %39
  br i1 %cmp315, label %if.end323, label %if.then317

if.then317:                                       ; preds = %if.end308
  %cmp320 = icmp ugt i16 %38, %39
  br label %cleanup

if.end323:                                        ; preds = %if.end308
  %inc324 = add i32 %i1.addr.0, 4
  %inc325 = add i32 %i2.addr.0, 4
  %idxprom326 = zext i32 %inc324 to i64
  %arrayidx327 = getelementptr inbounds i8, i8* %block, i64 %idxprom326
  %40 = load i8, i8* %arrayidx327, align 1
  %idxprom328 = zext i32 %inc325 to i64
  %arrayidx329 = getelementptr inbounds i8, i8* %block, i64 %idxprom328
  %41 = load i8, i8* %arrayidx329, align 1
  %cmp332 = icmp eq i8 %40, %41
  br i1 %cmp332, label %if.end340, label %if.then334

if.then334:                                       ; preds = %if.end323
  %cmp337 = icmp ugt i8 %40, %41
  br label %cleanup

if.end340:                                        ; preds = %if.end323
  %arrayidx342 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom326
  %42 = load i16, i16* %arrayidx342, align 2
  %arrayidx344 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom328
  %43 = load i16, i16* %arrayidx344, align 2
  %cmp347 = icmp eq i16 %42, %43
  br i1 %cmp347, label %if.end355, label %if.then349

if.then349:                                       ; preds = %if.end340
  %cmp352 = icmp ugt i16 %42, %43
  br label %cleanup

if.end355:                                        ; preds = %if.end340
  %inc356 = add i32 %i1.addr.0, 5
  %inc357 = add i32 %i2.addr.0, 5
  %idxprom358 = zext i32 %inc356 to i64
  %arrayidx359 = getelementptr inbounds i8, i8* %block, i64 %idxprom358
  %44 = load i8, i8* %arrayidx359, align 1
  %idxprom360 = zext i32 %inc357 to i64
  %arrayidx361 = getelementptr inbounds i8, i8* %block, i64 %idxprom360
  %45 = load i8, i8* %arrayidx361, align 1
  %cmp364 = icmp eq i8 %44, %45
  br i1 %cmp364, label %if.end372, label %if.then366

if.then366:                                       ; preds = %if.end355
  %cmp369 = icmp ugt i8 %44, %45
  br label %cleanup

if.end372:                                        ; preds = %if.end355
  %arrayidx374 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom358
  %46 = load i16, i16* %arrayidx374, align 2
  %arrayidx376 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom360
  %47 = load i16, i16* %arrayidx376, align 2
  %cmp379 = icmp eq i16 %46, %47
  br i1 %cmp379, label %if.end387, label %if.then381

if.then381:                                       ; preds = %if.end372
  %cmp384 = icmp ugt i16 %46, %47
  br label %cleanup

if.end387:                                        ; preds = %if.end372
  %inc388 = add i32 %i1.addr.0, 6
  %inc389 = add i32 %i2.addr.0, 6
  %idxprom390 = zext i32 %inc388 to i64
  %arrayidx391 = getelementptr inbounds i8, i8* %block, i64 %idxprom390
  %48 = load i8, i8* %arrayidx391, align 1
  %idxprom392 = zext i32 %inc389 to i64
  %arrayidx393 = getelementptr inbounds i8, i8* %block, i64 %idxprom392
  %49 = load i8, i8* %arrayidx393, align 1
  %cmp396 = icmp eq i8 %48, %49
  br i1 %cmp396, label %if.end404, label %if.then398

if.then398:                                       ; preds = %if.end387
  %cmp401 = icmp ugt i8 %48, %49
  br label %cleanup

if.end404:                                        ; preds = %if.end387
  %arrayidx406 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom390
  %50 = load i16, i16* %arrayidx406, align 2
  %arrayidx408 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom392
  %51 = load i16, i16* %arrayidx408, align 2
  %cmp411 = icmp eq i16 %50, %51
  br i1 %cmp411, label %if.end419, label %if.then413

if.then413:                                       ; preds = %if.end404
  %cmp416 = icmp ugt i16 %50, %51
  br label %cleanup

if.end419:                                        ; preds = %if.end404
  %inc420 = add i32 %i1.addr.0, 7
  %inc421 = add i32 %i2.addr.0, 7
  %idxprom422 = zext i32 %inc420 to i64
  %arrayidx423 = getelementptr inbounds i8, i8* %block, i64 %idxprom422
  %52 = load i8, i8* %arrayidx423, align 1
  %idxprom424 = zext i32 %inc421 to i64
  %arrayidx425 = getelementptr inbounds i8, i8* %block, i64 %idxprom424
  %53 = load i8, i8* %arrayidx425, align 1
  %cmp428 = icmp eq i8 %52, %53
  br i1 %cmp428, label %if.end436, label %if.then430

if.then430:                                       ; preds = %if.end419
  %cmp433 = icmp ugt i8 %52, %53
  br label %cleanup

if.end436:                                        ; preds = %if.end419
  %arrayidx438 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom422
  %54 = load i16, i16* %arrayidx438, align 2
  %arrayidx440 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom424
  %55 = load i16, i16* %arrayidx440, align 2
  %cmp443 = icmp eq i16 %54, %55
  br i1 %cmp443, label %if.end451, label %if.then445

if.then445:                                       ; preds = %if.end436
  %cmp448 = icmp ugt i16 %54, %55
  br label %cleanup

if.end451:                                        ; preds = %if.end436
  %inc452 = add i32 %i1.addr.0, 8
  %inc453 = add i32 %i2.addr.0, 8
  %cmp454 = icmp ult i32 %inc452, %nblock
  %sub = select i1 %cmp454, i32 0, i32 %nblock
  %inc452.sub = sub i32 %inc452, %sub
  %cmp458 = icmp ult i32 %inc453, %nblock
  %sub461 = select i1 %cmp458, i32 0, i32 %nblock
  %i2.addr.1 = sub i32 %inc453, %sub461
  %sub463 = add nsw i32 %k.0, -8
  %56 = load i32, i32* %budget, align 4
  %dec = add nsw i32 %56, -1
  store i32 %dec, i32* %budget, align 4
  %cmp464 = icmp sgt i32 %sub463, -1
  br i1 %cmp464, label %do.body, label %cleanup

cleanup:                                          ; preds = %if.end451, %if.then445, %if.then430, %if.then413, %if.then398, %if.then381, %if.then366, %if.then349, %if.then334, %if.then317, %if.then302, %if.then285, %if.then270, %if.then253, %if.then238, %if.then221, %if.then206, %if.then189, %if.then172, %if.then155, %if.then138, %if.then121, %if.then104, %if.then87, %if.then70, %if.then53, %if.then36, %if.then19, %if.then
  %retval.0.shrunk = phi i1 [ %cmp7, %if.then ], [ %cmp22, %if.then19 ], [ %cmp39, %if.then36 ], [ %cmp56, %if.then53 ], [ %cmp73, %if.then70 ], [ %cmp90, %if.then87 ], [ %cmp107, %if.then104 ], [ %cmp124, %if.then121 ], [ %cmp141, %if.then138 ], [ %cmp158, %if.then155 ], [ %cmp175, %if.then172 ], [ %cmp192, %if.then189 ], [ %cmp209, %if.then206 ], [ %cmp224, %if.then221 ], [ %cmp241, %if.then238 ], [ %cmp256, %if.then253 ], [ %cmp273, %if.then270 ], [ %cmp288, %if.then285 ], [ %cmp305, %if.then302 ], [ %cmp320, %if.then317 ], [ %cmp337, %if.then334 ], [ %cmp352, %if.then349 ], [ %cmp369, %if.then366 ], [ %cmp384, %if.then381 ], [ %cmp401, %if.then398 ], [ %cmp416, %if.then413 ], [ %cmp433, %if.then430 ], [ %cmp448, %if.then445 ], [ false, %if.end451 ]
  %retval.0 = zext i1 %retval.0.shrunk to i8
  ret i8 %retval.0
}

; Function Attrs: nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { cold nounwind }
attributes #7 = { cold }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!1 = distinct !{!1, !2, !3}
!2 = !{!"llvm.loop.vectorize.width", i32 1}
!3 = !{!"llvm.loop.interleave.count", i32 1}
!4 = distinct !{!4, !2, !3}
!5 = distinct !{!5, !2, !3}
!6 = distinct !{!6, !2, !3}
!7 = distinct !{!7, !2, !3}
!8 = distinct !{!8, !2, !3}
!9 = distinct !{!9, !2, !3}
!10 = distinct !{!10, !2, !3}
!11 = distinct !{!11, !2, !3}
!12 = distinct !{!12, !2, !3}
!13 = distinct !{!13, !2, !3}
